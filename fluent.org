#+SETUPFILE: theme-bigblow.setup
* FAQ
* Theory Guide
file:c:/Users/exw692/Dropbox/Emacs/fluent-theory-guide.org
* Hardware requirement and recommendation

Modified: February 8, 2017
Updated at ANSYS release 18.x
This document is designed to help you get started with your hardware selection. 
ANSYS is vendor neutral as we partner with all of the major hardware vendors.
 At the end of this document are some specific hardware model recommendations based on the vendor that you normally purchase from. 
Please visit the vendor’s website and attach any specifications to your SR for further review

** EBU (Electronics)
Intel XEON Broadwell – E5 26xx v4 series (High clock speed on chip but not necessarily the highest)
Note: HFSS is primarily an in core solver so clock speed and RAM speed is important
 Turn off Hyper-threading
 Leave Turbo boost on
Memory (Fastest memory, so 2400 MHz)
 To operate at maximum speed all memory channels in both processors should be populated with equal amounts of memory.
 8 GB per core HFSS, Maxwell, and other Electronic Packages or minimum 128 GB – 256 GB
Interconnect
 QDR or FDR IB interconnect if you will be running on 2 or more nodes in parallel (on a cluster, Minimum 10 G network)
Hard Drives
 If possible, SSD drives for the solving drive and/or multiple SAS HDs in RAID 0 array (2 or 4 HDs), 15,000 RPM, RAID 0. Local disk is recommended for the solver for temporary file I/O during solves. (Please see below for more hard drive information)
Graphics
 Nvidia Quadro M4000, M5000, K5200, Nvidia Quadro M6000
GPU (HFSS, Maxwell Transient, Matrix Solvers)
Nvidia Tesla Kepler series (K20, K20x, K40, K80) (Best Speed up is seen using the Keplar series)
Nvidia K5000, K5200, K6000
CFD (Fluids)
Intel XEON Broadwell – E5 26xx v4 series (High clock speed on chip but not necessarily the highest)
 Turn off Hyper-threading
 Leave Turbo boost on
Memory (Fastest memory, so 2400 MHz)
 To operate at maximum speed all memory channels in both processors should be populated with equal amounts of memory.
 4 GB per core for CFD
Interconnect
 QDR or FDR IB interconnect if you will be running on 4 or more nodes in parallel
Hard Drives
 CFD does not do a lot of Disk I/O so you can use SATA drives
2
Modified: February 8, 2017
Graphics
 Nvidia Quadro M4000, K5200, Nvidia Quadro M6000
GPU (CFX does not support the use of GPU. GPU is only applicable for Fluent)
 Nvidia K5000, nVIDIA Quadro K5200, K6000
 Keplar, Fermi and Tesla cards (K80 recommended for Fluent, if applicable) Note : Please read ANSYS Help on supported models for Fluent GPU usage
Mechanical
Intel XEON Broadwell – E5 26xx v4 series (High clock speed on chip but not necessarily the highest)
 Turn off Hyper-threading
 Leave Turbo boost on
Memory (Fastest memory, so 2400 MHz)
 To operate at maximum speed all memory channels in both processors should be populated with equal amounts of memory.
 8 GB per core
Note: Purchasing more RAM will alleviate I/O issues as (1) the solver can use this memory to avoid doing as much I/O, and (2) the operating system can then use available RAM to cache or buffer these I/O that MAPDL writes.
Interconnect
 QDR or FDR IB interconnect if you will be running on 2 or more nodes in parallel
Hard Drives
 If possible, SSD drives for the solving drive and/or multiple SAS HDs in RAID 0 array (2 or 4 HDs), 15,000 RPM, RAID 0.
Note: The faster the hard drives the faster the simulation. For DMP, the program writes 8 sets of files (one for each core they run on), so having SSDs with a lower seek time can help avoid having to wait while the hard drive seeks to read/write to all those different files. (see below for more information about hard drives)
Graphics
 Nvidia Quadro K5200, Nvidia Quadro M6000
GPU
 We recommend the Kepler K40 (K80 if models are over 5 Million DOF)
 Nvidia M4000, K5000, K5200, K6000
Additional Hard drive information (Electronics and Mechanical)
I/O to the hard drive is the third component of a balanced system. Well balanced systems can extend the size of models that can be solved if they use properly configured I/O components. If ANSYS simulations are able to run with all file I/O cached by a large amount of physical memory, then disk resources can be concentrated on storage more than performance.
A good rule of thumb is to have 10 times more disk space than physical memory available for your simulation. With today’s large memory systems, this can easily mean disk storage requirements of 500 GB to 1 TB (TeraByte). However, if you use physical disk storage routinely to solve large models, a high performance file system can make a huge difference in simulation time.
3
Modified: February 8, 2017
A high performance file system could consist of solid state drives (SSDs) or conventional spinning hard disk drives (HDDs). SSDs typically offer superior performance over HDDs, but have other factors to consider, such as cost and mean-time-to-failure. Like HDDs, multiple SSDs can be combined together in a RAID0 array. Maximum performance with a RAID array is obtained when the ANSYS simulation is run on a RAID0 array of 4 or more disks that is a separate disk partition from other system file activity. For example, on a Windows desktop the drive containing the operating system files should not be in the RAID0 configuration. This is the optimal recommended configuration. Many hardware companies do not currently configure separate RAID0 arrays in their advertised configurations. Even so, a standard RAID0 configuration is still faster for ANSYS simulations than a single drive.
Servers versus Workstations
 If you have or will obtain in the future 32 or more parallel licenses (HPC Packs or Enterprise Licenses) and have one or more users that need to submit jobs using a higher core count than what is available on current Workstations we tend to recommend servers (or a cluster) and a supported Job Scheduler is required.
IT Support
 If you decide, based on best practices and recommendations from Ansys, to buy a server or build a cluster, IT expertise is required or third party ANSYS Partner support for configuring your cluster and job scheduler (resource manager). Ansys does not configure clusters or job schedulers but we do provide full support for configuring Ansys supported applications on Servers, Workstations or Clusters. If you need third-party Ansys partner contact information please contact Ansys Support.
Suggested Hardware Solutions
DELL
Workstations
Dell Precision T5810, T7810, T7910
Servers
If you have 32 or more Ansys parallel licenses and have more than one user that needs to submit jobs we tend to recommend servers (for a cluster) and using a Job Scheduler
Dell PowerEdge R630, M630 (blade), R730, C6320.
HP
Workstations
HP Z640 or Z840
Servers
4
Modified: February 8, 2017
If you have 32 or more Ansys parallel licenses and have more than one user that needs to submit jobs we tend to recommend servers (for a cluster) and using a Job Scheduler
HP BL460c (HP WS460c Graphics Expansion blade. The WS460c is focused on GPU and graphics rendering) Apollo 2000 LENOVA
Workstations ThinkStation P700, P900 ThinkPad P70
Supported Job Schedulers
 Microsoft 2008 R2 SP 4 (support will be dropped in second quarter 2016 for 2008 Server) and 2012 HPC Server R2 (2012 R2 recommend) Patch 3
 IBM Platform LSF (Linux)
 Altair PBS Pro (Linux)
 Univa (SGE) (Linux)
 Torque with Moab (Linux) this is open source software from Adaptive Computing. For Support and Setup please visit their website
o http://docs.adaptivecomputing.com
o http://www.adaptivecomputing.com/pro
5
Modified: February 8, 2017
Information on Laptops and other Mobile Devices
ANSYS does not benchmark on Laptops or other mobile devices at this time and we cannot guarantee the performance or stability in using such devices. Our recommended hardware is based on performance testing on certified workstations and servers.
Platform Support
Defining the optimum computer infrastructure for use of ANSYS software begins with understanding the computing platforms that are tested and supported by ANSYS. Follow the links below to learn about the computing platforms we support as well as reference system architectures recommended by valued partners.
 ANSYS Platform Support - Summary of Strategy and Plans (PDF) http://www.ansys.com/-/media/Ansys/corporate/files/pdf/solutions/it-professionals/platform-support/platform-support-strategy-and-plans-17-january-2016.pdf?la=en  ANSYS 17.0- Browser Support (PDF) http://www.ansys.com/-/media/Ansys/corporate/files/pdf/solutions/it-professionals/platform-support/browser-suppport-17.pdf?la=en  ANSYS 17.0 - CAD Support (PDF) http://www.ansys.com/-/media/Ansys/corporate/files/pdf/solutions/it-professionals/platform-support/cad-support-17.pdf?la=en  ANSYS 17.0 - Graphics Cards Tested (PDF) http://www.ansys.com/-/media/Ansys/corporate/files/pdf/solutions/it-professionals/platform-support/graphical-display-graphics-cards-tested-17.pdf?la=en
 ANSYS 17.0 - Remote Display Support (PDF)
http://www.ansys.com/-/media/Ansys/corporate/files/pdf/solutions/it-professionals/platform-support/remote-display-virtual-desktop-support-17.pdf?la=en  ANSYS 17.0 - Interconnects Support (PDF) http://www.ansys.com/-/media/Ansys/corporate/files/pdf/solutions/it-professionals/platform-support/interconnects-support-17.pdf?la=en  ANSYS 17.0 - Platform Support by Application (PDF) http://www.ansys.com/-/media/Ansys/corporate/files/pdf/solutions/it-professionals/platform-support/platform-support-by-application-17.pdf?la=en
* Tutorial
file:tutorial_fluent.org
* Module
file:module.org
* Mixing Plane Model :MPM:
- Theory background:
the rotor  and stator cell zones are resolved steadily
- the flows upstream and downstream mixing plane are circumferencialyl averaged
- *the flow data at the mixing plane interface* is
*circumferentially averaged*  on both the rotor outlet and the stator inlet boundaries

- To setup a mixing plane:
Setting Up Domain → Mesh Models → Mixing Planes

- BCs types of Mixing plane:
  + *pressure outlet* of Rotor (front)
  + *Pressure inlet* of Stator (Rear Rotor)

Chapter 13: Using the Mixing Plane Model
* VOF
References: fluent user guide
Setting Up the VOF Model, 25.3.  user guide

Modeling Open Channel Flows 
Water surface/wave 
Choose: Geometric Reconstruction Scheme
Reason: most accurate and is applicable for general unstructured meshes.

Steps:
1. Only surface, open channel flow, find a paper, and do it with fluent
2. Surface + cylinder
3. Surface + turbine


** Steady vs transient VOF calculations

A steady-state VOF calculation is sensible only when your solution is independent of the initial conditions 
and there are distinct inflow boundaries for the individual phases.

Example:
#i.e. the flow of water in a channel with a region of air on top and a separate air inlet.

 *unsteady VOF* will ALWAYS be much more *stable* then *steady* formulation,
 and there are cases when it is almost impossible to obtain a converged solution using the steady implicit formulation. 
An example would be the supercritical (Fr>1) Open Channel flow, 
for which the steady approach is inapplicable, and one must use unsteady solver.

There are three possible approaches to a VOF problem:

- steady implicit , suited for the cases where there is no interest but for the final state of the solution;
 difficult to converge, needs low URF, especially for momentum.

- unsteady explicit, suited for accurate time-dependant solutions, stable up to CFL=5 near the free surface; very time-consuming, but necessary if you are interested in evolutive-type problems.

- unsteady implicit, not as accurate as explicit, but for sufficiently small time steps (CFL no more then 10), applicable to evolutive problems, with some error expected (general evolution of the phenomena is well predicted, but all oscillations are smoothed); very stable, even when using large time steps (CFL>100), which makes it applicable to steady-type problems also.

My favorite approach for steady problems is unsteady implicit formulation, because it allows me to obtain a solution much faster then with steady implicit. Example: for a free surface flow around a hull, steady implicit converges in 7000 iterations (2000 for the first order solution, 5000 for the second order solution), unsteady implicit converges in about 1000 iterations (with 5 iterations per timestep, 200 timesteps), ramping CFL from 1 at start to 100 (doubling it every 10 timesteps). I think this is quite an improvement!

So my advice is to use unsteady implicit, first order time discretisation, with large timesteps.

From <http://www.cfd-online.com/Forums/fluent/44808-plz-help-urgent-vof-model-steady-state.html> 

From: Theory guide, 17.3.3,
****************
** Solution methods
For VOF you MUST use *only* *Body Force Weighted* or *PRESTO* schemes for *pressure discretisation*,
 prefferably BFW because it is more stable, even on tri-tetra meshes, and you need to activate "Implicit Body Force" option 
in the Multiphase GUI panel.

** How to stabilize VOF simulation with Geo-Reconstruct scheme?
#2039870
Product Family: Fluid Dynamics
Product: ANSYS Fluent
Area: MP - Free Surface Flow
SubArea: Multi-fluid VOF


*Answer:*

Geo-Reconstruct VOF scheme is recommended for capturing very accurate and sharp interface. But it is also least stable scheme and frequently encounters convergence difficulty. Further, a moving or deforming zone decreases the solution stability by several folds.

Below are the settings that can help stabilize the solution:

1. Use variable time stepping with following settings; this change should address most of the problems. But if trouble continues, follow recommendations as explained in point "2".
a. Global Courant Number = 2 to 0.1
b. Minimum Step Change Factor = 0.05
c. Maximum Step Change Factor = 1.1
It is critical for stability to allow gradual increase but sharp decrease in time step size.

2. Solution stability enhancement for critical cases
a. Lower under-relaxation for pressure and momentum = 0.2 - 0.3
b. Using SIMPLE instead of PISO
c. Replace Incompressible air with isothermal ideal gas
- Energy equation not being solved
- Allows variation in density for air
- Critical for closed domain with high rotation
d. Use First Order for momentum equation

3. Running first time step is very crucial from solution stability perspective. 
In most of the cases, stability issues are faced in first time-step itself. 
Use realistic initial conditions, and lower CFL. 
By default, for first time-step, FLUENT solves VOF equation at every iteration. 
Though default setting will work for most of the cases, in some cases it can lead to stability issues. 
You can turn off the calculation of VOF equation at every iteration by changing following rpvar:
(rpsetvar 'mp/mfluid-first-time-step? #f)
* Error :error:
** Turbulent viscosity limited to viscosity ratio of 1e+05
*** reason
The possible *causes* for large turbulent viscosity ratio include:
- Bad initial conditions for the *turbulence quantities* (k and e)
- The initial condition values of k and epsilon are unphysically high. Make sure that these values
are rerelatively low
- You start the simulation with second order schemes for k and epsilon. Make sure you start with first 
order and move to second order. If the warning still continues, you can use first order for epsilon
, as the epsilon equation is more sensitive and difficult to converge (and is often  the culprit behind viscosity limitation warnings).
- Skewed cell, make sure sknewness is <0.9

*** How to display cells with high turbulent viscosity ratio?
file: display cells with high turbulent viscosity ratio.pdf

1. Go to setup-domain ->Adapt->Iso-Value
2. Under "Iso-Value of" select "turbulence" and below that turbulent viscosity ratio 
3. Under "Iso-min" select a value just smaller than the upper limit that is being reached by the turbulent viscosity ratio.
 E.g. if the default upper limit of turbulent viscosity ratio is 1E+5 the select 99999 as "iso-min" 
4. Under "Iso-max" select a value larger than the upper limit that is being reached by the turbulent viscosity ratio. E.g. 100001
5. Click on mark
6. Click on Manage 
7. In the new panel that opens ("Manage Adaption Registers" panel), select the new register created and click on Display.
 You will now see all the cells with turbulence viscosity ratio between 99999 and 100001 displayed by red dots in the graphics panel
8. If you want to display the grid along with the cells, click on the Options button in the "Manage Adaption Registers" panel and 
click on draw grid then select the required surfaces in the Grid Display panel that will pop up and click Display.
file:figures/iso_value_adpation.jpg
file:figures/high_viscosity_ratio_cells.png
file:figures/adaption_register.jpg

*** solution
1. increase upper limit of turbulent viscosity ratio as 1e8 or 1e9
> solution controls/limits
file:figures/limit_turbulent_viscosity_ratio.jpg

2. If the problem is not caused by *bad mesh*, then *the beginning of the phenomena* can usually be avoided by:
-Turn off solving *turbulence equations* for the first 100-200 iterations
-Turn on turbulence and continue iterations

3. If the problem occurs *in the middle of the iteration process*, then use the following procedure:
- Stop the iteration
- Turn *off* all equations except the *turbulence equations*
- Increase turbulence under relaxation factors (URFs) (k and e) to 1 and iterate for 20-50 iterations
- *Turn back all equations* and reduce the turbulence URFs to 0.5-0.8 and then continue iterations
- Repeat the above steps for several times

For *faster convergence*, it might be useful to obtain an initial solution with the *standard k-e model* 
before switching to a more advanced turbulence model.

Because some turbulent flows are inherently unsteady, 
verify if the flow has any unsteady behavior and switch to *transient calculation* if needed.

** zone–surface: cannot create surface from sliding interface zone
the message appears when Fluent opens and reads the case and data files. It simply means the boundaries of the non–conformal interfaces match exactly, such that there are no non–overlapping sections on either side of the interface."

** Error: Failed to make zones periodic.


answer:
 axis of rotation in the global z-direction for rotational periodicity

** Halting due to end of file on input
delete save residuals commands

** Process 1928: Received signal SIGSEGV. 
Running on windows
Mesh size, 12M


serial
	Error:  received a fatal signal (Segmentation fault).
	Error Object: #f

parallel
	select 4 processors
	
	error information
	Node 0: Process 1928: Received signal SIGSEGV.
	
	Node 5: Process 2824: Received signal SIGSEGV.
	MPI Application rank 0 exited before MPI_Finalize() with status 2
	 The fl process could not be started.
	
Reason
	This is primarily a Windows issue.
		
		If running Fluent with -t1 or higher number of processes and leave the session for an extended period of time (2-20 hours), it receives the following message in the console:
		
		The fl process could not be started.
		
		No other information about what timed out is provided, and only the cortex process is left running. This issue becomes more significant in light of the switch from serial to -t1.
		IP interfaces on the machine.
		
		The problem seems to occur with the PPP Adapter Umbrella doing some periodic disconnections. We do not see connection disruptions between the cortex and host process which are connected through Local loopback: 127.0.0.1
		
Resolution:
		
		Windows
		
		Type: ipconfig /all in a Command Prompt window
		
		If you see the PPP Adapter Umbrella connected disable it if possible.
		You can also enforce the use of local loopback in the Fluent Launcher, Environment tab by entering this value:
		
		FLUENT_HOST_IP=-127.0.0.1
		
	If using command line job submission add this value to your command line when launching FLUENT or modify the FLUENT Launcher, Environment tab as noted above
		
		This issue will be addressed in future releases of Fluent. 
		

		
** Couldn't intersect threads 6 and 5 (periodic faces).
Non-conformal periodic interface with empty intersection.
This is likely due to incorrect specification of periodic offset values. Please check the offset values specified
and recreate the interface.

- Solution 1:
+ z axis is axis of rotation 
first interface zone periodic 1 and second interface zone periodic 2 follow right hand rule

if not works
- Solution 2:
For ANSYS Meshing mesh file, do *match control* in ANSYS Meshing

For *Pointwise* mesh:
 1. Create a *database plane* at the *symmetry* location.
 2. *Project* the periodic domains and connectors to the plane.
3.  to verify that all appropriate grid points are constrained to the plane.
>>Examine/Database associativity
	


** Received signal SIGSEGV on Linux  OS
*** Description
 UDF parallel runnning\\
job 141938\\
eror information
-  hwloc 1.11.1 has encountered what looks like an error from the operating system\\
-  L3 (cpuset 0x000003f0) intersects with NUMANode (P#0 cpuset 0x0000003f) without inclusion!\\
- Error occurred in topology.c line 981\\
- Node 1: Process 22250: Received signal SIGSEGV.\\
- Fatal error in one of the compute processes.\\
*** answer
chang node to NXV node
- SM node get the above error message



***  How to specify the number of nodes?
Here is an example of an Ansys job running on *64 cores* across *two nxv nodes* [fn:ansys-parallel-linux].

#+BEGIN_SRC
#!/bin/bash
#$ -cwd 
#$ -j y
#$ -m bea               #get notifications on job start, finish and abortion.

#$ -pe parallel 64 
#$ -l h_rt=4:0:0
#$ -l infiniband=nxv
#$ -l ansys=64  #request 64 ansys licenses.

module load ansys
ansys180 -dis -np ${NSLOTS} -b < [INPUT FILE]
#+END_SRC
- ~${NSLOTS}~ # set to the number of cores requested with "-pe".

which command/script corresponds to “two” nodes?
What does “#$ -l ansys=64” mean?
Do I need to give a number to replace ${NSLOTS}? If do, it would duplicate with #$ -pe parallel 64

*answer*
You should only request the number of cores you want your job to run on and whether the job is smp or parallel.

On the nxv parallel nodes, your request must use all 32 cores on a single node with a minimum of 2 nodes (hence 64 cores).

If you wanted to use 3 or 4 nxv parallel nodes, your request would be "-pe parallel 96" or "-pe parallel 128" respectively.
xk

Ansys is licensed for 128 cores on Apocrita, when running the application you can request licences via ~l ansys <number of cores>~
So if you use 64 cores, you should pass the "-l ansys=64" scheduler parameter to request 64 ansys licenses.

The ~NSLOTS~ variable is set to the number of cores requested with "-pe".
We prefer using this variable to ensure applications only use the number of cores requested.
** Stack backtrace generated for process id 973 on signal 11 :
 Error in `fluent': free(): corrupted unsorted chunks: 0x0000000001499030 


save case and data separately, if not works, save case and data with HD5 format

~file/write-data e387_new-uns-tsr55-100.h5~
*** Read hd5 in Serial on Window OS
Error: Hdfio library can be only loaded in parallel.
*** Read HD5 file Using 2 node paralllel in Windows OS
Warning: reading 64 partition grid onto 2 compute node machine.
         Combining every 32 partitions.
    11408693 faces ...
  #001: F:\TeamCityBuilds\HDF5Builds170\Source\hdf5-1.8.13\src\H5Gint.c line 844 in H5G_iterate(): error iterating over links
    major: Symbol table
    minor: Iteration failed
  #002: F:\TeamCityBuilds\HDF5Builds170\Source\hdf5-1.8.13\src\H5Gobj.c line 704 in H5G__obj_iterate(): no creation order index to query
    major: Symbol table
    minor: Bad value
MPI Application rank 0 exited before MPI_Finalize() with status 2
 The fl process could not be started.
***  a clean experiment.

1. The case and data files are saved in Linux in a standard binary *.cas* and .dat format. 
- Can these files be read in on a same number of cores on the very same cluster in Linux?
    yes
- Can these files be read in on a different number of cores in Linux?
    Haven't try
-  Can these files be read in Windows? 
   + can't read on Windows on serial, and have the following  error message: 
Error:  received a fatal signal (Segmentation fault).
Error Object: #f

- Is it a cluster or big shared memory machine?
  Linux Cluster
-   How many partitions are used in Windows? 
    1
-  Did you monitor any memory and space hardware consumption & limitations in Windows?
    memory, 27GB, hardware more than 100GB

2. The case and data files are saved in Linux in a compressed .cas.gz and .dat.gz format. 
-   Can these files be read in on a same number of cores on the very same cluster in Linux?
   yes
-   Can these files be read in on a different number of cores in Linux?
     not tried
-   Can these files be read in Windows? Is it a cluster or big shared memory machine?
    got the following error when launch fluent with 2 node on Windows OS
***
Node 999999: Process 4808: Received signal SIGSEGV.
Node 0: Process 4300: Received signal SIGSEGV.
Node 1: Process 3972: Received signal SIGSEGV.
MPI Application rank 0 exited before MPI_Finalize() with status 2
 The fl process could not be started.
*********
-   How many partitions are used in Windows? 
    1
-   Did you monitor any memory and space hardware consumption & limitations in Windows?
    memory, 27GB, hardware more than 100GB

3. The case and data files are saved in Linux in a new HDT5 composite format  .cas.h5 and .dat.h5 format. 
-   Can these files be read in on a same number of cores on the very same cluster in Linux?
   yes
-   Can these files be read in on a different number of cores in Linux?
  havn't try
-   Can these files be read in Windows? Is it a cluster or big shared memory machine?

1) when launch Fluent in Serial on Windows OS
    Error: Hdfio library can be only loaded in parallel.
2) When launch Fluent Using 2 node paralllel on Windows OS
      Warning: reading 64 partition grid onto 2 compute node machine.
         Combining every 32 partitions.
    11408693 faces ...
   #001: F:\TeamCityBuilds\HDF5Builds170\Source\hdf5-1.8.13\src\H5Gint.c line 844 in H5G_iterate(): error iterating over links
    major: Symbol table
    minor: Iteration failed
  #002: F:\TeamCityBuilds\HDF5Builds170\Source\hdf5-1.8.13\src\H5Gobj.c line 704 in H5G__obj_iterate(): no creation order index to query
    major: Symbol table
    minor: Bad value
   MPI Application rank 0 exited before MPI_Finalize() with status 2
   The fl process could not be started.

-   How many partitions are used in Windows? 
1
-   Did you monitor any memory and space hardware consumption & limitations in Windows?
 
4. Does the error happen during the case or the data file read-out?
   + no problem with reading and writing on Linux Cluster, but can't read the data file on Windows OS




** received a fatal signal (Segmentation fault).

** Error happened when replacing cell zone and interpolate result
Error messages:
Warning: Could not find thread 34 for domain 1
Restoring id for cell zone #f from 34 to 7

Error: %%set-thread-id: invalid thread [1]
Error Object: #f
Error: access: unbound variable
Error Object: set-var!
Answer: 
There is a defect in Fluent. I merged the case file and the new mesh in Fluent meshing. Please find attached the case file. You will have to check the boundary conditions and the mesh interfaces again.

** Stationary wall motion relative to adjacent cell zone detected
 In cases where the fluid zone motion type is specified as *Moving Mesh* or *Moving Reference Frame*,
 all wall zones should be set to Moving Wall in the Momentum tab of the Wall boundary conditions panel.
 The wall motion should be defined Relative to Adjacent Cell Zone. 
The exception to this is if the walls are stationary in the absolute frame. 
To define wall motion, see Section  7.13.1.

** WARNING: Zone 13 has inconsistent periodic setting. 
         Please fix the problem with the TUI command '/mesh/repair-improve/repair-periodic'

** Error: CDR: invalid argument ~[1]~: wrong type [not a pair]

Error: CDR: invalid argument [1]: wrong type [not a pair]
Error Object: #f

Warning: An error or interrupt occurred while reading the journal file.
Some commands may not have been completed.


> Halting due to end of file on input.

*** answer
This is most likely a problem with the text format of your *journal file*.
 If you edit the text file on a Windows machine and then try to read it on a Linux cluster, 
it is possible that the formats are incompatible and that there are *hidden characters* in the file
 that prevent it from reading correctly on Linux.
 There is a Linux command called '[[http://dos2unix.sourceforge.net/][dos2unix]]' that can be used to convert the format of such files.
 I would suggest you try this or, if not available, try opening the journal file in a Linux text editor, such as 'vi' and remove any unwanted "control characters".

- dos2unix: Removing Hidden Windows Characters from Files

To run ~dos2unix~ in Ubuntu:

~kaiming@V-Ubuntu:~/Dropbox/code$ dos2unix wave.jou~
~dos2unix: converting file wave.jou to Unix format ...~

another way is to edit the journal file in Linux OS

** Error: The fl process could not be started
~#2050947~
Summary:



This is primarily a Windows issue.

If running Fluent with -t1 or higher number of processes and leave the session for an extended period of time (2-20 hours), 
it receives the following message in the console:

~The fl process could not be started.~

No other information about what timed out is provided, and only the cortex process is left running.
 This issue becomes more significant in light of the switch from serial to -t1.
IP interfaces on the machine.

The problem seems to occur with the PPP Adapter Umbrella doing some periodic disconnections. 
We do not see connection disruptions between the cortex and host process which are connected through Local loopback: 127.0.0.1

*** solution

Windows

Type: ~ipconfig /all~ in a Command Prompt window

If you see the PPP Adapter Umbrella connected, disable it if possible.
You can also enforce the use of *local loopback* in the Fluent Launcher, Environment tab by entering this value:

FLUENT_HOST_IP=-127.0.0.1

If using *command line* job submission add this value to your command line when launching FLUENT or modify the FLUENT Launcher,
 Environment tab as noted above




** hwloc 1.11.1 has encountered what looks like an error from the operating system
*** description:
running platform: HPC Apocrita
paralllel UDF job
*** answer:
change node, 
parallel udf works for *NXV node*, but not in *[[https://docs.hpc.qmul.ac.uk/nodes/sm/][SM node]]*
*** What should I do when hwloc reports "operating system" warnings?
When the operating system reports invalid locality information (because of either software or hardware bugs), hwloc may fail to insert some objects in the topology because they cannot fit in the already built tree of resources. If so, hwloc will report a warning like the following. The object causing this error is ignored, the discovery continues but the resulting topology will miss some objects and may be asymmetric (see also What happens if my topology is asymmetric?).
***************************************************************************** hwloc has encountered what looks like an error from the operating system.** L3 (cpuset 0x000003f0) intersects with NUMANode (P#0 cpuset 0x0000003f) without inclusion!* Error occurred in topology.c line 940** Please report this error message to the hwloc user's mailing list,* along with the output from the hwloc-gather-topology script.****************************************************************************
These errors are common on large AMD platforms because of BIOS and/or Linux kernel bugs causing invalid L3 cache information. In the above example, the hardware reports a L3 cache that is shared by 2 cores in the first NUMA node and 4 cores in the second NUMA node. That's wrong, it should actually be shared by all 6 cores in a single NUMA node. The resulting topology will miss some L3 caches.
If your application not care about cache sharing, or if you do not plan to request cache-aware binding in your process launcher, you may likely ignore this error (and hide it by setting HWLOC_HIDE_ERRORS=1 in your environment).
Some platforms report similar warnings about conflicting Packages and NUMANodes. Upgrading the BIOS and/or the operating system may help. Otherwise, as explained in the message, reporting this issue to the hwloc developers (by sending the tarball that is generated by the hwloc-gather-topology script on this platform) is a good way to make sure that this is a software (operating system) or hardware bug (BIOS, etc).

From <https://www.open-mpi.org/projects/hwloc/doc/v1.11.2/a00030.php> 

** ERROR: ASSQ: invalid argument =[2]= : improper list
~#2039555~
*** Symptoms:
- Fluent works as expected as long as the Execute Commands window is not touched
- The command cannot be changed or removed
- Worst case: a GENERAL-CAR-CDR message is printed afterwards and the case becomes invalid
*** Source of the error:
If this error is shown there is something wrong with the settings stored in the case file.
Usually there is a conflict with the syntax within the case file.

*** Solution:
1. Export the settings to a text file with the Fluent TUI command:
~/file/write-settings temp.set~
2. Edit the text file with a text editor and look for the line about execute commands. The search string could look like:
(monitor/commands (
3. Remove the line completely and save the file
4. In Fluent read the settings with the following TUI command. 
~/file/read-settings temp.set~
5. You should be able to open the Execute Commands panel now. All entries should be gone but all other settings should be still intact.

If you encounter this error message when opening other panels this solution might work, too.
 But you have to locate the settings in question in the file yourself.
 Make sure to check all settings in Fluent after reading the settings file.





** Error: GENERAL-CAR-CDR: invalid argument =[1]=: improper list
*** description
get the error when running 2d udf 2nd stoke wave
*** Reasons for this Error:
It occurs when FLUENT is expecting *a list of inputs* and it gets insufficient or an improper list instead from the Cortex. 
It could also happen while saving a case file, and the save operation does not complete due to issues like insufficient storage space.
 In the latter case, the case file usually gets corrupted and it may no longer allow the save operation for case and data.

*** Solution:
1. If the case is corrupted and Fluent is still working properly, the *case settings* can be saved through the following TUI command:
~/file/write-settings copy_settings.set~
2. *Data* can be saved using the *file interpolate* option using the following TUI command:
~/file/interpolate/write-data copy_data.ip yes yes~
3. The above files can be read into a working case file using the following commands:
~/file/read-settings copy_settings.set~
~/file/interpolate/read-data copy_data.ip~

Also, consider referring to Solution#2039555

** review flow specifications at inlet boundaries. Default values detected.(boundary conditions)




** How to display cells with high turbulent viscosity ratio?
Often times during your simulation you will see a message that turbulence viscosity ratio has exceed the 
upper limit (default 1e+5) in a certain number of cells. Do the following to *locate these cells*. Once you 
locate these cells, you might be able to figure out the cause of why turbulence viscosity is exceeding the 
limit in these cells.
1. Go to Adapt ->Iso-Value
2. Under "Iso-Value of" select turbulence and below that turbulent viscosity ratio
3. Under "Iso-min" select a value just smaller than the upper limit that is being reached by the turbulent viscosity ratio.
 E.g. if the default upper limit of turbulent viscosity ratio is 1E+5 the select 
99999 as "iso-min"
4. Under "Iso-max" select a value larger than the upper limit that is being reached by the turbulent 
viscosity ratio. E.g. 100001
5. Click on mark
6. Click on Manage
7. In the new panel that opens ("Manage Adaption Registers" panel),select the new register created 
and click on Display. You will now see all the cells with turbulence viscosity ratio between 99999 
and 100001 displayed by red dots in the graphics panel
8. If you want to display the grid along with the cells, click on the Options button in the "Manage 
Adaption Registers" panel and click on draw grid then select the required surfaces in the Grid 
Display panel that will pop up and click Display
file:C:\Users\exw692\Dropbox\Emacs\figures\fluent\iso-values-adaption.png
file:C:\Users\exw692\Dropbox\Emacs\figures\fluent\cells-with-high-turbulent-viscosity-ratio.bmp
file:C:\Users\exw692\Dropbox\Emacs\figures\fluent\adaption-display-option.bmp

** high residual
enable scale residual


** Error: CDR: invalid argument [1]: wrong type [not a pair]
Error Object: #f
answer: close all monitor, reset fluent setups

**  The fl process could not be started

** VIsualize the Boundary between RANS and LES Zones in DES simulation
~202441~
** wall roughness height and manning coefficient
~2036665~
ANSYS Fluent requires the roughness height

• There is lots of data where the surface roughness 
• How can the surface roughness height and 
** booyancy effects on turbulence productions
~2001681~

Can buoyancy production be included into k - \omega models and 
RSM ( Stress-omega and stress-BSL) without a UDF in R17
answer: yes



** change wall to periodic BC
a. Press < Enter > in the console to get the command prompt (>).
b. Type the commands as shown below in the console:
#+BEGIN_QUOTE
mesh/modify-zones/list-zones/
/mesh/modify-zones/ make-periodic
Periodic zone [()] 10    #zone ID
Shadow zone [()] 9
Rotational periodic? (if no, translational) [yes] yes
Create periodic zones? [yes] yes
#+END_QUOTE


** combine two mesh files into one single mesh file using Fluent
keywords: merge mesh, combine mesh

1. Read the hex mesh file film-hex.msh.
File/Read/ Mesh...
2. Append the tet mesh file film-tet.msh.
Mesh /Zone / Append Case File...
The *Append Case File*  functionality allows you to combine two mesh files into one single mesh file

from: Chapter 9: Using a Non-Conformal Mesh, tutorial guide fluent v15
**  Create *Continuous Mesh* from Multiple Mesh Files 
#2048316 
When the analysis area consists of multiple mesh files, it is convenient to use *TGrid* to combine them into one analysis space.

The specific procedure is as follows.
1. Read all corresponding mesh files from *File* > *Read* > *Mesh*
(At this point, the adjacent boundary of each mesh file is a discontinuous mesh)

2. From *Boundary* > *Merge Nodes*, turn off the *Only Free Nodes* option and click the Merge button
(Continuous mesh is created)

3. Output the mesh file from File - Write - Mesh

Note: 
However, the continuous mesh becomes a mesh on the boundary where multiple mesh files are adjacent.
 Please be aware that this falls within the allowable error range.

The above method is easier than working with FLUENT
 (reading multiple mesh files using the: *append Case File function* and using *Fuse* to make it into a continuous mesh).

This procedure also helps to check whether the created mesh is a mesh that can be calculated in FLUENT. 
This is because when a continuous mesh is outputted,
/the boundary type of the adjacent boundary mesh/ files is recognized as *wall* and *wall-shadow* in FLUENT.

** What is the difference between the Fuse and Merge functions
 *Fuse* will create one *interior* by combining two boundaries, Merge makes one boundary under a single name. 

Their specific uses are described below:
	
Fuse: 
	If you create one mesh by fusing it with another, their mesh pattern will be exactly the same at the junction where they connect.
 You can create one for interior faces by selecting the pair to become a surface using Fuse.
	
Merge: 
	Although it is commonly defined as a function that divides the boundary to multiple pieces in the pre-soft, 
it is possible to put them together as one mesh if you are fine with them falling under a single name.



** When to use operating density/operating temperature and how it is related to density?
#: 2045437 and #: 2042658 

** When is the operating density used in Fluent?
The *operating density* in Fluent is used in every case
 where gravity is activated. The term:

Ps‘ = Ps - rho(operating)*gravity*height

is used when computing the local pressure in the domain.
 If the operating density is not explicitly defined (this is the default)
 the operating density is set to the average value of density
 in the fluid domain. 
This is fine for constant density and 
also for the Boussinesq approach
 (where the density is constant except of the buoyancy term) 
but for all cases where density is a function of temperature and / or species concentration
 this mean value can lead to incorrect results as is shown in solution 2042659.

For multiphase simulations there are additional considerations to be taken into account.

The Operating Density is defined in

Tree:
Setup -> Cell Zone Conditions -> Operating Conditions
Setup -> Boundary Conditions -> Operating Conditions

Ribbon
Setting Up Physics -> Solver -> Operating Conditions



For more information, see:

“Inputs at Pressure Inlet Boundary Conditions” (Fluent Users Guide, R17.0, Chapter 6.3.3.1.)
and
“Operating Density” (Fluent Users Guide, R17.0, Chapter 13.2.4.5.)

(This Solution is also valid for earlier versions of Fluen
* TUI
keywords: Background Execution on Linux Systems, journal file
Programming language : [[https://en.wikibooks.org/wiki/Scheme_Programming][Scheme]], as a Lisp dialect

note:

Fluent cannot run multiple journals at the same time.

** Journal file

- journal file :: a sequence of ANSYS Fluent commands

- The purpose of a journal file is to automate a series of commands instead of entering them repeatedly
on the command line.
- the journal file does not contain any response to the confirmation request, ANSYS Fluent cannot
continue to follow the instructions of the journal file.


for more information, refer to Scheme notes file:C:\Users\exw692\Dropbox\Emacs\Scheme.org


*** Steady Example
#+BEGIN_SRC
;read-case
rc t-mrf_4.9.cas.gz
;read-data
rd t-4000.dat.gz
;iteration
it 4000
;write-data
wd t-8000.dat.gz

exit
yes
#+END_SRC
*** Unsteady
rc test.cas
rd test.dat
solve/set/time-step 0.00083
solve/dual-time-iterate 360 30
;write-case
wc test-360.cas
;file/write-data example.dat
wd ttest-350.dat
exit
yes

*** More examples
rc example.cas.gz
rd example.dat.gz
;unscaled force
/solve/monitors/force/unscaled? Yes
;set drag monitor in y coordinate on "blades" surface
/solve/monitors/force/set-drag-monitor cd yes blades () no yes cd-1 no no 0 1 0
	
;save residual
	(display "Save the residual in a file") (newline)
	(let ((writefile (lambda (p)
	(define np (length (residual-history "iteration")))
	(let loop ((i 0))
	(if (not (= i np))
	(begin (define j (+ i 1))
	(display (list-ref (residual-history "iteration") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "continuity") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "x-velocity") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "y-velocity") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "z-velocity") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "k") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "epsilon") (- np j)) p)
	(newline p)
	(loop (+ i 1))
	)
	)
	)
	) )
	(output-port (open-output-file "output.dat")))
	(writefile output-port)
	(close-output-port output-port))
	
wd example.dat.gz
Exit
Yes

*** Save residual 
#+BEGIN_SRC emacs-lisp
;save residuals
(display "Save the residual in a file") (newline)
(let
 ((writefile (lambda (p)
   (define np (length (residual-history "iteration")))
   (let loop ((i 0))
 (if (not (= i np))
(begin (define j (+ i 1))
(display (list-ref (residual-history "iteration") (- np j)) p) (display " " p)
(display (list-ref (residual-history "continuity") (- np j)) p) (display " " p)
(display (list-ref (residual-history "x-velocity") (- np j)) p) (display " " p)
(display (list-ref (residual-history "y-velocity") (- np j)) p) (display " " p)
(display (list-ref (residual-history "z-velocity") (- np j)) p) (display " " p)
(display (list-ref (residual-history "k") (- np j)) p) (display " " p)
(display (list-ref (residual-history "omega") (- np j)) p)
(newline p)
(loop (+ i 1))
)
)
)
) )
(output-port (open-output-file "residual_2000_e387_udf.dat")))
(writefile output-port)
(close-output-port output-port))
#+END_SRC 

The list of instructions can be written within a text editor. 

*** define boundary-conditions velocity-inlet
	- interactive commands
		(inlet)
		zone id/name [inlet] inlet
		Velocity Specification Method: Magnitude and Direction [no] no
		Velocity Specification Method: Components [no] yes
		Reference Frame: Absolute [yes] yes
		Use Profile for Supersonic/Initial Gauge Pressure? [no] no
		Supersonic/Initial Gauge Pressure (pascal) [0] 0
		Coordinate System: Cartesian (X, Y, Z) [yes] yes
		Use Profile for X-Velocity? [no] no
		X-Velocity (m/s) [0] 0
		Use Profile for Y-Velocity? [no] yes
		Use UDF Profile for Y-Velocity? [no] yes
		profile names list: ("udf" "udf")
		profile name ["udf"] "udf"
		data names list: ("y_velocity::libudf" "z_velocity::libudf")
		data name ["y_velocity::libudf"] "y_velocity::libudf"
		Use Profile for Z-Velocity? [no] yes
		Use UDF Profile for Z-Velocity? [no] yes
		profile names list: ("udf" "udf")
		profile name ["udf"] "udf"
		data names list: ("y_velocity::libudf" "z_velocity::libudf")
		data name ["y_velocity::libudf"] "z_velocity::lubudf"
		``z_velocity::lubudf'' unknown -- enter choice again.
		data names list: ("y_velocity::libudf" "z_velocity::libudf")
		data name ["y_velocity::libudf"]  "z_velocity::libudf"
- journal script
	/define boundary-conditions velocity-inlet inlet no yes yes no 0 yes no 0 yes yes "udf" "y_velocity::libudf" yes yes "udf"  "z_velocity::libudf"
	
		
		/define/boundary-conditions/velocity-inlet inlet no yes  yes yes no 0 yes yes   "udf"  "inlet_x_velocity::libudf"  yes yes "udf" "inlet_y_velocity::libudf" 
		
*** Report unscaled force and moment values 
/solve/monitors/force/unscaled? Yes


*** Set moment monitor
	/solve/monitors/force> set-moment-monitor
	monitor name [cm-2] monent
	monitor moment coefficient? [no] yes
	()
	zone id/name(1) [()] blades
	zone id/name(2) [()] 
	print cm data ? [no] no
	write data? [no] yes
	moment coeff. data file name? ["cm-2-history"] moment-history
	plot data? [no] no
	plot per zone ? [no] no
	x-component of moment center [1] 0
	y-component of moment center [0] 1
	z-component of moment center [0] 0
	x-component of moment axis [1] 0
	y-component of moment axis [0] 1
	z-component of moment axis [0] 0
	 
	 
	/solve/monitors/force/set-moment-monitor moment yes blades () no yes cm-history no no 0 0 0 0 1 0
	Blade # zone id/names
	() #no input

*** Set drag monitor
	/solve/monitors/force> set-drag-monitor
	monitor name [cd-1] cd
	monitor drag coefficient? [no] yes
	()
	zone id/name(1) [()] blades
	zone id/name(2) [()] ()
	print data ? [no] no
	write data? [no] yes
	drag coeff. data file name? ["cd-1-history"] cd-1
	plot data? [no] no
	plot per zone ? [no] no
	x-component of drag vector [1] 0
	y-component of drag vector [0] 1
	z-component of drag vector [0] 0
	 
	/solve/monitors/force/set-drag-monitor cd yes blades () no yes cd-1 no no 0 1 0

*** Discretization schemes
Use the following text commands as appropriate followed by the appropriate number from the list below.

/solve/set/discretization-scheme/pressure
/solve/set/discretization-scheme/flow
/solve/set/discretization-scheme/mom
/solve/set/discretization-scheme/k
/solve/set/discretization-scheme/epsilon
/solve/set/discretization-scheme/temperature

Basic discretization schemes:
("First Order Upwind" . 0)
("Second Order Upwind" . 1)
("Power Law" . 2)
("Central Differencing" . 3)
("QUICK" . 4)

Pressure Discretization:
("Standard" . 10)
("Linear" . 11)
("Second Order" . 12)
("Body Force Weighted" . 13)
("PRESTO!" . 14)
("Continuity Based" . 15)
Pressure-Velocity-Coupling:
("SIMPLE" . 20)
("SIMPLEC" . 21)
("PISO" . 22)

Example 1:
To set pressure-velocity coupling to PISO use the TUI

/solve/set/discretization-scheme/flow 22

Example 2:
To set pressure discretization to Body-Force Weighted use the TUI

/solve/set/discretization-scheme/pressure 13

*pressure-velocity-coupling model* in batch mode 
| index | model   |
|    20 | SIMPLE  |
|    21 | SIMPLEC |
|    22 | PISO    |
|    24 | Coupled |

~/define/models/solver/pressure-based yes~   #pressure based solver
~solve / set p-v-coupling 20~  #SIMPLE
~solve / set p-v-coupling 21~ #SIMPLEC
~solve / set p-v-coupling 22~ #PISO
;Coupled solver, Coupled with Volume Fractions [no] 
 /solve/set p-v-coupling 24  no 

;change  courant number
;/solve/set/p-v-controls [courant-number] [explicit momentum] [explicit pressure] 
/solve/set/p-v-controls  1 0.5 0.5 
- where /everything in the brackets including the brackets has to be replaced by a number/.
an wrong example

;Coupled solver, Coupled with Volume Fractions [no] 
 /solve/set p-v-coupling 24  no 
;/solve/set/p-v-controls [courant-number] [explicit momentum] [explicit pressure] 
/solve/set/p-v-controls  1 0.5 0.5 

#+BEGIN_SRC

/solve/set/p-v-controls  1

Error: eval: unbound variable
Error Object: courant-number
#+END_SRC


*** Create conformal periodic BC
>/mesh/modify-zones/make-periodic






*** Turbulence model
define/models/viscous/inviscid yes
/define/models/viscous/ke-standard yes
/define/models/viscous/kw-sst yes          
 #Enable/disable the SST - turbulence model.
/define/models/viscous/kw-standard    yes
*** record journal GUI
Fluent can also record all what is done during the interactive setup through 
    File > Write > Start Journal. 

The setup is saved with GUI language in the journal file.
 But it is recommended to create journal file with the TUI

 (using TUI commands or scheme commands) and not through de GUI, as GUI structure may changes from one version to another one.
 Note that in this recorded file, all the lines will start with (cx-gui-do ....) which represents all the click on the GUI.

**** note
Be careful not to change the directory while recording a journal file.
**** reference
>> 4.9 Creating and Reading Journal Files, https://www.sharcnet.ca/Software/Fluent6/html/ug/node94.htm#JournalFile
*** The interactive TUI inside Fluent helps:

type commands in the console window of fluent GUI
~>~ #command prompt 
~q~  #quit, back up a level

 ~Enter~ # generate a listing of the submenus and commands in the current menu

**** In batch mode:
[usual fluent starting command] -i journal_file.jou &
For example:
~fluent 3ddp -t4 -i example.jou -g >> transcript.out~
This command will run Fluent in 3d double precision (dp), in parallel on 4 procs (-t4) using the *example.jou* journal file (-i), in batch (-g) and save the output to the transcript.out file (>>).
dual-time-iterate
; Perform unsteady iterations for a specified number of time steps.
#/solve/dual-time-iterate [number-of-timesteps] [max-number-of-iterations-per-time-step]

; Read case file
rc example.cas
; Initialize the solution
/solve/initialize/initialize-flow
; Calculate 50 iterations
it 50
; Write data file
wd example50.dat
; Calculate another 50 iterations
it 50
; Write another data file
wd example100.dat
; Exit Fluentt
exit
yes

here is a working example of a journal files (.jou), when you see a ";", it means i'm asking fluent to skip that command:

/file/read-case-data /home/maghazlani/Analysis/intake_test_3-1-23000.cas
;/define/operating-conditions/operating-pressure 0
;/define/models/solver/density-based yes
;/define/models/energy yes
;/define/models/viscous/kw yes
;/define/boundary-conditions/modify-zones/zone-type 11 pressure-inlet
;/define/materials/change-create air air yes ideal-gas no no no no no no
;/define/boundary-conditions/pressure-inlet inlet yes no 101325 no 27357 no 300 no yes no no no yes 01 0.05268
;/define/boundary-conditions/modify-zones/zone-type 10 pressure-outlet
;/define/operating-conditions/operating-pressure 0
;/adapt/adapt-to-gradients pressure curvature 0 0.7 0.3 yes 100
;/adapt/set/max-number-cells 2000
;/solve/initialize/compute-defaults/pressure-inlet 11
;/solve/initialize/repair-wall-distance yes
;Initialize the flow field with the current default values.
/solve/initialize/initialize-flow
;/adapt/mark-inout-hex yes no 0.000515079 0.205496 0.0156082 0.0451296 -0.000208354 -0.0265887
;/file/auto-save/data-frequency 20000
;/mesh/polyhedra/convert-domain yes yes
;/solve/set/under-relaxation/k 0.5
;/solve/set/under-relaxation/epsilon 0.5
;/solve/set/under-relaxation/turb-viscosity 0.7
;/solve/set/under-relaxation/solid 0.7




# journal example
; example.jou 
; starting command : fluent 3ddp -i example.jou -g >> output.txt &
/file/read-case-data "tank-flush.gz" ; read the case and data files
/solve/initialize/hyb-initialization ; initialization
/solve/dual-time-iterate 10 10 ; iterate with the transient solver
/file/write-case-data "final.gz" 
exit
 yes

 click on the keyboard Enter button to see all the available menus, 
click on letter "q" to come back to the previous menu. 
This can lead to this kind of journal file

an example 
note: 
(the semicolon (;) is used to include comments):

; example.jou 
; starting command : fluent 3ddp -i example.jou -g >> output.txt &
/file/read-case-data "tank-flush.gz" ; read the case and data files
/solve/initialize/hyb-initialization ; initialization
/solve/dual-time-iterate 10 10 ; iterate with the transient solver
/file/write-case-data "final.gz" ok 
exit yes
** Reference

4.2. Running ANSYS Fluent in Batch Mode, [[file:C:\akmkemin\Backup\ANSYS\FLUENT\Getting-Started-Guide.pdf][getting start guide]]
https://web.stanford.edu/class/me469b/download/scheme.pdf
Scripted-CFD-simulations-and-postprocessing-in-Fluent-and-ParaVIEW.pdf
Scheme_fluent_programming_reference.pdf
Chapter 2:Text User Interface (TUI), user guide, fluent
text command list, fluent, file:C:\akmkemin\Backup\ANSYS\FLUENT\TUI\Text-Command-List-Fluent.pdf
** change rotational velocity of moving reference frame
file:figures/fluent/cell-zone-conditions.png

***  batch model
; fluid zone, 2; axis, 0 0 1; rotational speed, -10 rad/s
/define/boundary-conditions/fluid 2 no no no yes -1 no -10 no 0 no 0 no 0 no 0 no 0 no 0 no 0 no 0 no 1 none no no no no no
*** interactive console TUI
/define/boundary-conditions> fluid
(fluid)
zone id/name [fluid] 2
material-name [water-liquid]: Change current value? [no] no
Specify source terms? [no] no
Specify fixed values? [no] no
Frame Motion? [yes] yes
; relative to inertial frame
Relative To Cell Zone [-1] 
Use Profile for Reference Frame Rotation Speed? [no] 
Reference Frame Rotation Speed (rad/s) [-8] -10

Use Profile for Reference Frame X-Velocity Of Zone? [no] no
Reference Frame X-Velocity Of Zone (m/s) [0] 0
Use Profile for Reference Frame Y-Velocity Of Zone? [no] no
Reference Frame Y-Velocity Of Zone (m/s) [0] 0
Use Profile for Reference Frame Z-Velocity Of Zone? [no] no
Reference Frame Z-Velocity Of Zone (m/s) [0] 

Use Profile for Reference Frame X-Origin of Rotation-Axis? [no] 
Reference Frame X-Origin of Rotation-Axis (m) [0] 
Use Profile for Reference Frame Y-Origin of Rotation-Axis? [no] 
Reference Frame Y-Origin of Rotation-Axis (m) [0] 
Use Profile for Reference Frame Z-Origin of Rotation-Axis? [no] 
Reference Frame Z-Origin of Rotation-Axis (m) [0] 

Use Profile for Reference Frame X-Component of Rotation-Axis? [no] 
Reference Frame X-Component of Rotation-Axis [0] 
Use Profile for Reference Frame Y-Component of Rotation-Axis? [no] 
Reference Frame Y-Component of Rotation-Axis [0] 
Use Profile for Reference Frame Z-Component of Rotation-Axis? [no] 
Reference Frame Z-Component of Rotation-Axis [1] 

Reference Frame User Defined Zone Motion Function ["none"] 
Mesh Motion? [no] 
Deactivated Thread [no] 
Laminar zone? [no] 
Porous zone? [no] 
3D Fan Zone? [no] 

** set background color
The commands to have a white background are:

>/display/set/colors/color-scheme classic
>/display/set/colors/background "white"

By default color scheme is set to "workbench" with the blue screen which is common to almost all workbench tools.
 And background option is not available with "workbench" option.
** syntax
command 1 argument 1 argument 2


** Batch model
 

~;~  #don't execute the command, comment

1. Save the case settings
~/file/write-settings copy_settings.set~
2. Save Data can be saved using the file interpolate option
~/file/interpolate/write-data copy_data.ip yes yes~
3. read case settings and interpolated data
~/file/read-settings copy_settings.set~
~/file/interpolate/read-data copy_data.ip~

/define/user-defined/
compiled-functions
function-hooks
execute-on-demand /*Execute UDFs on demand.*/
Answer:










** boundary-conditions
 /define/boundary-conditions
bc-settings/                                    set/
copy-bc                                         symmetry
fluid                                           target-mass-flow-rate-settings/
list-zones                                      velocity-inlet
modify-zones/                                   wall
non-reflecting-bc/                              zone-name
periodic                                        zone-type
pressure-outlet

use UDF for inlet velocity for k-omega turbulence model
Turbulent Kinetic Energy,1, (m2/s2)
Specific Dissipation Rate,1, (1/s)
*** Inlet BC
**** sine velocity inlet (console log)
> define

/define> boundary-conditions

/define/boundary-conditions> velocity-inlet
(inlet)

zone id/name [inlet] inlet
Velocity Specification Method: Magnitude and Direction [no] no
Velocity Specification Method: Components [yes] yes
Reference Frame: Absolute [yes] yes
Use Profile for Supersonic/Initial Gauge Pressure? [no] no

Supersonic/Initial Gauge Pressure (pascal) [0] 0
Coordinate System: Cartesian (X, Y, Z) [yes] yes
Use Profile for X-Velocity? [no] no
X-Velocity (m/s) [0] 0

Use Profile for Y-Velocity? [yes] yes
Use UDF Profile for Y-Velocity? [yes] yes
profile names list: ("udf")
profile name ["udf"] 
data names list: ("x_vel::libudf")
data name ["x_vel::libudf"] 
Use Profile for Z-Velocity? [no] no
Z-Velocity (m/s) [0] 0
Turbulent Specification Method: K and Omega [no] no
Turbulent Specification Method: Intensity and Length Scale [no] no
Turbulent Specification Method: Intensity and Viscosity Ratio [yes] yes
Turbulent Intensity (%) [4.999999888241291] 5
Turbulent Viscosity Ratio [5] 
define/boundary-conditions/velocity-inlet/inlet no yes yes no 0 yes no 0  yes yes "udf" "x_vel::libudf" no 0 no no yes 5 5 
**** 2d case
set "inlet_x_veloocity" to x-component of velocity
and  "inlet_y_veloocity" to y-component of velocity

- console interactive
Console TUI
/define boundary-conditions velocity-inlet
(inlet)
zone id/name [inlet] inlet
Velocity Specification Method: Magnitude and Direction [no] no
Velocity Specification Method: Components [yes] yes
Reference Frame: Absolute [yes] yes
Use Profile for Supersonic/Initial Gauge Pressure? [yes] no
Supersonic/Initial Gauge Pressure (pascal) [0] 0
Use Profile for X-Velocity? [yes] yes
Use UDF Profile for X-Velocity? [yes] yes
profile names list: ("udf" "udf")
profile name ["udf"] "udf"
data names list: ("inlet_y_velocity::libudf" "inlet_x_velocity::libudf")
data name ["inlet_x_velocity::libudf"] "inlet_x_velocity::libudf"
Use Profile for Y-Velocity? [yes] yes
Use UDF Profile for Y-Velocity? [yes] yes
profile names list: ("udf" "udf")
profile name ["udf"] "udf"
data names list: ("inlet_y_velocity::libudf" "inlet_x_velocity::libudf")
data name ["inlet_y_velocity::libudf"] "inlet_y_velocity::libudf"
Turbulent Specification Method: K and Omega [no] yes
Use Profile for Turbulent Kinetic Energy? [no] no
Turbulent Kinetic Energy (m2/s2) [1] 1
Use Profile for Specific Dissipation Rate? [no] no
Specific Dissipation Rate (1/s) [1] 1
- journal script 
/define/boundary-conditions/velocity-inlet inlet no yes  yes yes no 0 yes yes   "udf"  "inlet_x_velocity::libudf"  yes yes "udf" "inlet_y_velocity::libudf" yes no 1 no 1



console information

(inlet)
Please answer y[es] or n[o].
profile names list: ("udf" "udf")
data names list: ("inlet_y_velocity::libudf" "inlet_x_velocity::libudf")
profile names list: ("udf" "udf")
data names list: ("inlet_y_velocity::libudf" "inlet_x_velocity::libudf")


**** 3d case
- interactive commands

/define boundary-conditions velocity-inlet
(inlet)
zone id/name [inlet] inlet
Velocity Specification Method: Magnitude and Direction [no] no
Velocity Specification Method: Components [no] yes
Reference Frame: Absolute [yes] yes
Use Profile for Supersonic/Initial Gauge Pressure? [no] no
Supersonic/Initial Gauge Pressure (pascal) [0] 0
Coordinate System: Cartesian (X, Y, Z) [yes] yes
Use Profile for X-Velocity? [no] no
X-Velocity (m/s) [0] 0
Use Profile for Y-Velocity? [no] yes
Use UDF Profile for Y-Velocity? [no] yes
profile names list: ("udf" "udf")
profile name ["udf"] "udf"
data names list: ("y_velocity::libudf" "z_velocity::libudf")
data name ["y_velocity::libudf"] "y_velocity::libudf"
Use Profile for Z-Velocity? [no] yes
Use UDF Profile for Z-Velocity? [no] yes
profile names list: ("udf" "udf")
profile name ["udf"] "udf"
data names list: ("y_velocity::libudf" "z_velocity::libudf")
data name ["y_velocity::libudf"] "z_velocity::lubudf"
``z_velocity::lubudf'' unknown -- enter choice again.
data names list: ("y_velocity::libudf" "z_velocity::libudf")
data name ["y_velocity::libudf"]  "z_velocity::libudf"

- journal script

/define boundary-conditions velocity-inlet inlet no yes yes no 0 yes no 0 yes yes "udf" "y_velocity::libudf" yes yes "udf"  "z_velocity::libudf"

define/boundary-conditions/velocity-inlet/inlet no yes yes no 0 yes no 0  yes yes "udf" "x_vel::libudf" no 0 no no yes 5 5  



** Solver
/define/models/solver/density-based yes


** time step size
syntax:
~/solve/dual-time-iterate [number-of-timesteps] [max-number-of-iterations-per-time-step]~
- where everything in the brackets including the brackets has to be replaced by a number.


> ANSYS Fluent as a Server Users Guide

A command name
consists of phrases separated by hyphens. A command is matched by matching an initial sequence of its phrases. Matching of hyphens is optional

2.2.Text Prompt System
	The following shows some examples of prompts:
		filled-mesh? [no] Enter
		shrink-factor [0.1] Enter
		line-weight [1] Enter
		title [""]Enter
	The default value for a prompt is accepted by pressing Enter on the keyboard or typing a , (comma).
	
	Ctrl+c.#abort a prompt sequence, simply press 
	’() or () #empty list
	terminate the process with an empty list
	"~a" stands for random variable, like % in C language.
	"()" means that we simply press "enter" and do not specify any names.
	"x" at the end of line is the same loop variable and two of "x" correspond to two of "~a". 
	q,  take one level above
	windows/
		XY plot window options. For a description of the items in this menu, see display/set/windows/xy.
	Sf
	
** Modifying the View
	
		Select and control the view of the scene that is displayed in the graphics window.
		
		all defined views will be saved in the case file when you write one.
		
		If you plan to use your views with another case file, you can write a “view file” containing just the views. 
		
		 “/fi/rc” # abbreviations of “/file/read-case”
		
		/solve/dual-time-iterate 500 20 iterate 500 timesteps, 20 iterations/timestep
		
		From <https://www.google.co.uk/search?q=dual-time-iterate&ie=utf-8&oe=utf-8&client=firefox-b-ab&gfe_rd=cr&ei=GxpQWM01iPfwB76JooAP> 
		
		
		
**  Animation/residual/monitor on Linux Cluster (TUI)
The cluster cannot  *plot* any figures. 
If you do, errors transpire and you’ll have to delete the job (see Section 3.3). 
This includes animations, residuals and monitors. 

If you want to make animations, *write* the data files and use TecPlot on your PC. 

Your output file is where you will monitor the convergence of your simulation.
 From: http://web2.clarkson.edu/projects/cluster/FLUENT_cluster.pdf
From <http://www.cfd-online.com/Forums/fluent/90579-creating-animation-through-tui.html> 
Here is a sample journal file for a 2D simulation  in batch mode.
**** journal.jou	
;read case and data
file/read-case single-48cm-2D-batchtest.cas
;
;initialize domain with air
/solve/initialize/initialize-flow
;
;patch water to raceway depth of 3.5 cm
/adapt/mark-inout-rectangle yes no 0 0.62875 -0.48 0.035
/solve/patch water () (0) mp 1
;
;set up image output
/display/set/contours/filled-contours yes
/display/set/picture/driver png
/display/set/picture/landscape yes
/display/set/picture/x-resolution 960
/display/set/picture/y-resolution 720
/display/set/picture/color-mode color
/views/restore-view front
;
;print front view of phases and velocity magnitude at t=0
	/display/contour air vof 0 1
	/display/save-picture airvof%t.png
	/display/contour mixture velocity-magnitude 0 0.5
	/display/save-picture velmag%t.png
	;
;set up display commands to print front view of phases and velocity magnitude every 20 time steps
	/solve/execute-commands/add-edit command-2 20 "time-step" "/display/contour air vof 0 1"
	/solve/execute-commands/add-edit command-3 20 "time-step" "/display/save-picture airvof%t.png"
	/solve/execute-commands/add-edit command-4 20 "time-step" "/display/contour mixture velocity-magnitude 0 0.5"
	/solve/execute-commands/add-edit command-5 20 "time-step" "/display/save-picture velmag%t.png"
	;
;set up auto-save
/file/auto-save data-frequency 500
/file/auto-save append-file-name-with time-step 6
;
;iterate over 5000 time steps
solve/set/time-step 0.001
solve/dual-time-iterate 5000 50
file/write-data single-48cm-2D-batchtest.dat 

	

		
** initialization
;Initialize the flow field with the current default values.
/solve/initialize/initialize-flow
/solve/initialize/hyb-initialization ; hybrid initialization	
; initialize from the velocity inlet
~/solve/initialize/compute-defaults/pressure-inlet 11~  #11 : id of pressure inlet
/solve/initialize/compute-defaults/velocity-inlet	147
；open channel initialize
/solve/initialize/compute-defaults/pressure-inlet 162 mixture
solve/initialize/open-channel-auto-init 162 yes
solve/initialize

**  discretization schemes 
Use the following text commands as appropriate followed by the appropriate number from the list below.

/solve/set/discretization-scheme/pressure
/solve/set/discretization-scheme/flow
/solve/set/discretization-scheme/mom
/solve/set/discretization-scheme/k
/solve/set/discretization-scheme/epsilon
/solve/set/discretization-scheme/temperature

Basic discretization schemes:
("First Order Upwind" . 0)
("Second Order Upwind" . 1)
("Power Law" . 2)
("Central Differencing" . 3)
("QUICK" . 4)
Pressure Discretization:
("Standard" . 10)
("Linear" . 11)
("Second Order" . 12)
("Body Force Weighted" . 13)
("PRESTO!" . 14)
("Continuity Based" . 15)
Pressure-Velocity-Coupling:
("SIMPLE" . 20)
("SIMPLEC" . 21)
("PISO" . 22)

Example 1:
To set pressure-velocity coupling to PISO use the TUI

/solve/set/discretization-scheme/flow 22

Example 2:
To set pressure discretization to Body-Force Weighted use the TUI

/solve/set/discretization-scheme/pressure 13
		
** Set under relaxation

/solve/set/under-relaxation/density 0.5
;turbulent kinetic energy
/solve/set/under-relaxation/k 0.5   
/solve/set/under-relaxation/epsilon  0.5         
;specific dissipation rate
/solve/set/under-relaxation/omega  0.5 
/solve/set/under-relaxation/turb-viscosity 0.5

/solve/set/under-relaxation/solid 0.7
/solve/set/under-relaxation/mom 0.5 # momentum
/solve/set/under-relaxation/epsilon 0.5   ; dissipation rate

;Coupled solver, Coupled with Volume Fractions [no] 
/solve/set p-v-coupling 24  no 
;/solve/set/p-v-controls [courant-number] [explicit momentum] [explicit pressure] 
/solve/set/p-v-controls  1 0.5 0.5 
/solve/set/under-relaxation/k 0.5           
/solve/set/under-relaxation/epsilon  0.5   

** log of  execute makefile

#+BEMIN_EXAMPLE

[exw692@frontend11 ~]$ cd UDF/libudf
[exw692@frontend11 libudf]$ make "FLUENT_ARCH=lnamd64"
for d in lnamd64/[23]*; do \
  ( \
    cd $d; \
        rm -rf *.{c,h,cpp,hpp}; \
    for f in ../../src/*.{c,h,cpp,hpp} ../../src/makefile ../../src/user.udf; do \
      if [ -f $f -a ! -f `basename $f` ]; then \
        echo "# linking to" $f "in" $d; \
        ln -s $f .; \
      fi; \
    done; \
    echo ""; \
    echo "# building library in" $d; \
    if [ "" = "1" ]; then \
        echo "# using gcc64"; \
        make ARCHC=gcc64 -k>makelog 2>&1; \
    else \
        if [ "" = "1" ]; then \
                echo "# using gcc"; \
                make ARCHC=gcc -k>makelog 2>&1; \
        else \
                make -k>makelog 2>&1; \
        fi; \
    fi;\
    cat makelog; \
  ) \
done
# linking to ../../src/vertical_component_2nd_stokes_wave.c in lnamd64/3ddp_host
# linking to ../../src/x_component_2nd_stokes_wave.c in lnamd64/3ddp_host
# linking to ../../src/udf.h in lnamd64/3ddp_host

# building library in lnamd64/3ddp_host
make[1]: Entering directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_host'
# Generating udf_names.c because of makefile vertical_component_2nd_stokes_wave.c x_component_2nd_stokes_wave.c
make[2]: Entering directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_host'
make libudf.so "CFLAGS=-D_lnamd64 -D_GNU_SOURCE -fpic -shared -ansi -Wall -O -DPTR_RESTRICT=    " "LDFLAGS=-shared -lm"
make[3]: Entering directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_host'
# Compiling udf_names.o because of udf_names.c
cc -D_lnamd64 -D_GNU_SOURCE -fpic -shared -ansi -Wall -O -DPTR_RESTRICT=         -I/share/apps/ansys/18.0.0/v180/fluentluent18.0.0/`expr "\`pwd\`" : '.*/\(.*\)/[23].*'`/`basename "\`pwd\`"` -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0/src/main -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/addon-wrapper -I/share/apps/ansys/18.0.0/v180/fluentluent18.0.0/src/io -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/species -I/share/apps/ansys/18.0.0/v180/flue/fluent18.0.0/src/pbns -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/numerics -I/share/apps/ansys/18.0.0/v180luent/fluent18.0.0/src/sphysics -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/storage -I/share/apps/ansys/18.0/v180/fluent/fluent18.0.0/src/mphase -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/bc -I/share/apps/ansys/18.0/v180/fluent/fluent18.0.0/src/models -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/material -I/share/apps/ays/18.0.0/v180/fluent/fluent18.0.0/src/amg -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/util -I/share/apps/ays/18.0.0/v180/fluent/fluent18.0.0/src/mesh -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/udf -I/share/apps/ays/18.0.0/v180/fluent/fluent18.0.0/src/ht -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/dx -I/share/apps/ansy18.0.0/v180/fluent/fluent18.0.0/src/turbulence -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/parallel -I/sharapps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/etc -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/ue -I/share/ps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/dpm -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/dbns -I/share/ps/ansys/18.0.0/v180/fluent/fluent18.0.0/cortex/src -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/client/src -I/sre/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/tgrid/src -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/multiport/s -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/multiport/mpi_wrapper/include -I/share/apps/ansys/18.0.0/v180/flue/fluent18.0.0/multiport/mpi_wrapper/src -I. -c udf_names.c
# Linking libudf.so because of udf_names.c udf_names.o
cc -shared -lm udf_names.o vertical_component_2nd_stokes_wave.o x_component_2nd_stokes_wave.o  -o libudf.so
make[3]: Leaving directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_host'
make[2]: Leaving directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_host'
make[1]: Leaving directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_host'
# linking to ../../src/vertical_component_2nd_stokes_wave.c in lnamd64/3ddp_node
# linking to ../../src/x_component_2nd_stokes_wave.c in lnamd64/3ddp_node
# linking to ../../src/udf.h in lnamd64/3ddp_node

# building library in lnamd64/3ddp_node
make[1]: Entering directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_node'
# Generating udf_names.c because of makefile vertical_component_2nd_stokes_wave.c x_component_2nd_stokes_wave.c
make[2]: Entering directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_node'
make libudf.so "CFLAGS=-D_lnamd64 -D_GNU_SOURCE -fpic -shared -ansi -Wall -O -DPTR_RESTRICT=    " "LDFLAGS=-shared -lm"
make[3]: Entering directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_node'
# Compiling udf_names.o because of udf_names.c
cc -D_lnamd64 -D_GNU_SOURCE -fpic -shared -ansi -Wall -O -DPTR_RESTRICT=         -I/share/apps/ansys/18.0.0/v180/fluentluent18.0.0/`expr "\`pwd\`" : '.*/\(.*\)/[23].*'`/`basename "\`pwd\`"` -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0/src/main -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/addon-wrapper -I/share/apps/ansys/18.0.0/v180/fluentluent18.0.0/src/io -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/species -I/share/apps/ansys/18.0.0/v180/flue/fluent18.0.0/src/pbns -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/numerics -I/share/apps/ansys/18.0.0/v180luent/fluent18.0.0/src/sphysics -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/storage -I/share/apps/ansys/18.0/v180/fluent/fluent18.0.0/src/mphase -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/bc -I/share/apps/ansys/18.0/v180/fluent/fluent18.0.0/src/models -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/material -I/share/apps/ays/18.0.0/v180/fluent/fluent18.0.0/src/amg -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/util -I/share/apps/ays/18.0.0/v180/fluent/fluent18.0.0/src/mesh -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/udf -I/share/apps/ays/18.0.0/v180/fluent/fluent18.0.0/src/ht -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/dx -I/share/apps/ansy18.0.0/v180/fluent/fluent18.0.0/src/turbulence -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/parallel -I/sharapps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/etc -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/ue -I/share/ps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/dpm -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/src/dbns -I/share/ps/ansys/18.0.0/v180/fluent/fluent18.0.0/cortex/src -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/client/src -I/sre/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/tgrid/src -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/multiport/s -I/share/apps/ansys/18.0.0/v180/fluent/fluent18.0.0/multiport/mpi_wrapper/include -I/share/apps/ansys/18.0.0/v180/flue/fluent18.0.0/multiport/mpi_wrapper/src -I. -c udf_names.c
# Linking libudf.so because of udf_names.c udf_names.o
cc -shared -lm udf_names.o vertical_component_2nd_stokes_wave.o x_component_2nd_stokes_wave.o  -o libudf.so
make[3]: Leaving directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_node'
make[2]: Leaving directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_node'
make[1]: Leaving directory `/data1/home/exw692/UDF/libudf/lnamd64/3ddp_node'
#+end-example

* Apocrita Linux Parallel OS
keywords: Linux, HPC, Apocrita, parallel 

- To run ANSYS in Linux cluster, you need *Shell scripts* (~.sh~ ) and *journal file* ( ~.jou~)
- For journal file, refer to [[ Journal file]]
** Account
IT research support account: 
exw692@qmul.ac.uk
A**n5****6 / exw***1***

# Research support password is different from campus password
To change passwords: https://pass.hpc.qmul.ac.uk/ 
** Login

Old account
		ssh -X exw692@login.hpc.qmul.ac.uk 
New account
	ssh  exw692@login2.hpc.qmul.ac.uk 
	Password: a**1***8***5

you need to login in via SSH, you can  use MobaXterm 


	Remote host: login.hpc.qmul.ac.uk
	Specify username: exw692
	
	If you want to change your password, log in to
	frontend1.apocrita.hpc.qmul.ac.uk	
	and type "passwd" (without the quotes) at the prompt.
	
	For more information on the HPC systems operated by
	IT Services - Research please visit
	https://www.hpc.qmul.ac.uk/
	
	Specific information on using Apocrita is available at
	https://www.hpc.qmul.ac.uk/twiki/bin/view/HPC/MidPlusInformation
	
	Use of the system is subject to the QMUL IT Regulations:
	http://www.its.qmul.ac.uk/ITregsETC/itreg.shtml
*** [[https://docs.hpc.qmul.ac.uk/intro/sshkeys/#mobaxterm][Setting up SSH key based access to Apocrita]]
# Generate Key
ssh-keygen

# Copy key to Apocrita
ssh-copy-id exw692@login.hpc.qmul.ac.uk

# You can now login with your key
ssh exw692@login.hpc.qmul.ac.uk

** OS

	CentOS
Resources
parallel ansys jobs up to 128 cores (4 nxv nodes). https://docs.hpc.qmul.ac.uk/using/#parallel-job

Module
	Ansys 18
Check module available?
	Module avail, https://docs.hpc.qmul.ac.uk/using/UsingModules/

** Terminal Commands
Note:  # means commend

- ls -l #list of software/doc
- passwd #password
- cd #change directory
- qdel  #delete jobs

- qrsh   #request interactive nodes on the cluster
- tab #add suffix automatically
** Shell Script
- Shell scripts is used to request computational resources and open ANSYS software
- For shell scripts,  refer to submitting jobs
#two node 
#!/bin/sh
#$ -cwd                 # Set the working directory for the job 
#$ -j y                 #combine the standard output and the standard error stream.
#$ -m bea               #get notifications on job start, finish and abortion.
#$ -M k.ai@qmul.ac.uk
#$ -l h_rt=48:0:0       #request 48 hour runtime
#$ -pe parallel 64      #parallel environment, multiple nodes, 64 cores (2 nxv nodes: 64/32=2)
#$ -l h_rt=24:0:0        #running time, 4 hour
#$ -l infiniband=nxv    #node type: nxv node, each node has 32 cores
#$ -l ansys=64          #request ansys licence for 64 cores

module load ansys/17.0     #load ansys 
fluent 3ddp -g -rsh -t$NSLOTS -pinfiniband -i e387un.jou
*** SMP job ([[https://docs.hpc.qmul.ac.uk/apps/sems/ansys/][one node]])
- SMP job :: multiple  cores on a single node (machine) with shared memory, e.g. using Open Multi-Processing (OpenMP)
Shared-Memory Parallelism (SMP) is when /work is divided between multiple threads or processes running on a single machine/ 
and these threads have access to common (shared) memory.

#+BEGIN_SRC
#running multiple cores on one node  

#!/bin/sh
#$ -cwd                 # Set the working directory for the job 
#$ -j y                 #combine the standard output and the standard error stream.
#$ -m bea               #get notifications on job start, finish and abortion.
#$ -M k.ai@qmul.ac.uk
#$ -l node_type=nxv       #node type,  can be 'sm', 'dn' or 'nxv' for smp jobs.
#$ -pe smp 2       #parallel environment, 1 node, 2 cores
#$ -l h_vmem=4G    #4GB memory per core
#$ -l h_rt=24:0:0       #request 48 hour runtime
#$ -l ansys=2         #request ansys licence for 64 cores
module load ansys    #load ansys 
fluent 2ddp -g -rsh -t$NSLOTS -i cylinder.jou
#+END_SRC

**** ansys example


Here is an example *Mechanical APDL* job running on *4 cores* and *16G of ram* on *a single node.*
#+BEGIN_SRC
#!/bin/bash
#$ -cwd                            # Set the working directory for the job to the current directory
#$ -j y                               #combine the standard output and the standard error stream.
#$ -pe smp 4                       #A single node, 4 cores
#$ -l h_rt=4:0:0                  # 1 hour runtime
#$ -l h_vmem=4G              # Request 4GB RAM per core
#$ -l ansys=4                    # ansys licence  for 4 cores

module load ansys
mapdl -np $NSLOTS -b < [SIM-FILE]
#+END_SRC
**** Fluent job
Here is an example of a *fluent 3d* job running on *4 cores* and *16G of ram on a single node*.
1. running time
2. memeory per core
3. number of cores
4. number of ansys licences (one core one licence)
#+BEGIN_SRC
#!/bin/bash
#$ -cwd
#$ -j y
#$ -pe smp 4
#$ -l h_rt=4:0:0
#$ -l h_vmem=4G
#$ -l ansys=4

module load ansys
fluent 3d -g -rsh -t$NSLOTS -i [SIM-FILE]
#+END_SRC




*** Parallel job  (multiple nodes)    
parallel licence for max 128 cores\\
For parallel jobs, each node is booked for exclusive use and uses all available memory on each node: you do not need to specify a memory requirement.

A low latency infiniband interconnect is provided for parallel jobs running over multiple nodes simultaneously using MPI.

Here is an example of a *Fluent 3d douple precision*  job running on *64 cores*  across *2  nxv nodes*.
#+BEGIN_SRC
#For parallel jobs, each node is booked for exclusive use and uses all available memory on each node: 
you do not need to specify a memory  requirement.
# add "-l infiniband=" command
#!/bin/bash
#$ -cwd                       # Set the working directory for the job       
#$ -j y                          #combine the standard output and the standard error stream
#$ -m bea                #get notifications on job start, finish and abortion.
#$ -pe parallel 64      #parallel environment, multiple nodes, 64 cores (2 nxv nodes: 64/32=2)
#$ -l h_rt=4:0:0        #running time, 4 hour
#$ -l infiniband=nxv  #node type: nxv node, each node has 32 cores
#$ -l ansys=64          #request ansys licence for 64 cores

module load ansys
fluent 3ddp -g -rsh -t$NSLOTS -pinfiniband -i udf.jou

#+END_SRC
~-pinfiniband~  #-p[interconnect], specifies the type of interconnect

**** Parallel Job Memory

For parallel jobs, each node is booked for *exclusive use* and uses all available memory on each node: you do not need to specify a memory requirement.
  


            

#+BEGIN_SRC
#!/bin/sh
#$ -cwd                 # Set the working directory for the job to the current directory
#$ -j y
#$ -pe parallel 128     # Request 128 cores/4 nxv nodes
#$ -l infiniband=nxv    # Choose infiniband island (ccn nxn nxv)
#$ -l h_rt=24:0:0       # Request 24 hour runtime

module load intelmpi

mpirun -np $NSLOTS ./code
#+END_SRC

** Journal file
- Journal file :: a list of command (batch model) 
- read case file
- read data file
- save residuals
- save force/moment
- save sectional figure
*** save image
*** 2nd stokes wave
rc st_e387_w_hy-14M_open_invisid.cas.gz
rd st_e387_w_hy-14M_open_invisid.dat.gz
;set drag moment and monitor in y coordinate on "blades" surface
solve/monitors/force/unscaled? yes
solve/monitors/force/set-drag-monitor cd yes blades () no yes thrust-history no no 0 1 0
solve/monitors/force/set-moment-monitor moment yes blades () no yes moment-history no no 0 0 0 0 1 0    
;Coupled solver, Coupled with Volume Fractions [no] 
;/solve/set p-v-coupling 24  no 
;/solve/set/p-v-controls [courant-number] [explicit momentum] [explicit pressure] 
;/solve/set/p-v-controls  1 0.5 0.5 
;/solve/set/under-relaxation/k 0.5           
;/solve/set/under-relaxation/epsilon  0.5   
;/solve/set/under-relaxation/turb-viscosity 0.5
(display "Save the residual in a file") (newline)
	(let ((writefile (lambda (p)
	(define np (length (residual-history "iteration")))
	(let loop ((i 0))
	(if (not (= i np))
	(begin (define j (+ i 1))
	(display (list-ref (residual-history "iteration") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "continuity") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "x-velocity") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "y-velocity") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "z-velocity") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "k") (- np j)) p) (display " " p)
	(display (list-ref (residual-history "omega") (- np j)) p)
	(newline p)
	(loop (+ i 1))
	)
	)
	)
	) )
	(output-port (open-output-file "residual_1000_e387_udf.dat")))
	(writefile output-port)
	(close-output-port output-port))
solve/iterate 3000  # steady iteration
wd e387_st_hy_14M_open_channel_3k.dat.gz
exit
yes

** Job status
- qstat #check the status of the jobs
*** no output to "qstat"
When there is no output to "qstat", it means you have no currently running jobs.
the "qacct -j 230831" command, to query the accounting file (archive of completed jobs).

** Submitting jobs


to submit a job, use ~qsub <scirpt name>~ command
i.e. ~qsub udf.sh~

*** request resources
The main purpose of a job script is to request the required resources and setup the environment. 
The main resources to be requested on the cluster are *cores*, *memory* and *runtime*.

a simple job script requesting a *single core*, 1GB of ram and 24 hours runtime:
#+BEGIN_SRC
#!/bin/sh
#$ -cwd           #execute the job from the Current Working Directory.
#$ -pe smp 1      # Request 1 node, 1 core
#$ -l h_rt=24:0:0 # Request 24 hour runtime
#$ -l h_vmem=1G   # Request 1GB RAM
./code
#+END_SRC
**** syntax
| ~smp~             | #Single Machine Processing   (1 node)                       |
| ~-pe~             | # Parallel Environment                                    |
| ~#$ -cwd~         | # Set the working directory for the job                     |
| ~#$ -j y~         | #combine the standard output and the standard error stream. |
| ~#$ -m bea~       | #get notifications on job Begin, End and Abortion.          |
| ~$NSLOTS~         | the number of cores/processes/slots the job will use        |
| ~-pe smp 4~       | #  parallel environment, single node, 4 cores                                    |
| ~-pe parallel 64~ | #     parallel environment, multiple node, 64 cores         |


~#$ <resource>~     #specify resources
~#$ -l h_rt=24:0:0~  #wallclock runtime 
~#$ -l excl~            #request a full node and ensure that the maximum amount of available memory is used by your job
~pe~                #request a parallel environment - this will usually be =smp= to /request a number of cores on the same node/ or *parallel* to request more than one whole machine.
~#$ -pe smp~   # parallel environment, 1 node
~-l exclusive=true~ 	#requests exclusive use of a node.
~#$ -l infiniband=nxv~    # for parallel job, Choose infiniband island ( nxv)
~#$ -pe parallel~ # parallel environment, parallel machine (node), more than 1  node
~#$ -pe parallel 128~     # Request 128 cores/4 nxv nodes
~#$ -M k.ai@qmul.ac.uk~   #specify email address
~-cwd~ 	#execute the job from the current working directory.
~-j y~ 	   #combine the standard output and the standard error stream.
 [[https://docs.hpc.qmul.ac.uk/apps/sems/ansys/][one node]]
*** Job Runtimes
- Jobs requesting more than 72 hours may not be scheduled as quickly as those requesting less.
- checkpointing :: a method of regularly dumping the job's state so that it can be restarted
*** Environment variables
| Variable           | Description                          |
| SGE_O_WORKDIR      | Jobscript directory                  |
| SGE_CWD_PATH       | Working directory                    |
| TMPDIR             | Job specific temporary directory     |
| JOB_NAME           | Job Name                             |
| QUEUE              | Queue                                |
| PE                 | Parallel Environment                 |
| NSLOTS             | Number of slots                      |
| NHOSTS             | Number of hosts                      |
| SGE_HGR_m_mem_free | Total memory requested (slots * mem) |
| SGE_HGR_gpu        | ID of GPU granted                    |
| SGE_BINDING        | Cores job is bound to on host        |
| SGE_TASK_FIRST     | First task in array                  |
| SGE_TASK_LAST      | Last task in array                   |
| SGE_TASK_STEPSIZE  | Array step size                      |
| SGE_TASK_ID        | Current Task ID in array             |
| PE_HOSTFILE        | Location of host file for MPI        |

*** job output
Output from the job will include an output and an error file 
~<jobname>.o<jobID>~ #output file
~<jobname>.e<jobID>~ #error file

** Glossary
*** [[https://www.nics.tennessee.edu/hpc-glossary][Core]]
A core is an individual processor: the part of a computer which actually executes programs. CPUs used to have a single core, and the terms were interchangeable. In recent years, several cores, or processors, have been manufactured on a single CPU chip, which may be referred to as a multiprocessor. It is important to note, however, that the relationship between the cores may vary radically: AMD's Opteron, Intel's Itanium, and IBM's Cell have very distinct setups.
*** References
https://www.nics.tennessee.edu/hpc-glossary
** Wiki
*** slot
*** CPU Core

Computers have a Central Processing Unit (CPU) which may have one or more CPU cores 
- A CPU core can only do one thing at a time. 
If there are many things that a CPU core must do it will start to become overloaded. Multiple CPU cores can run multiple applications at the same time.
*** Node
A node is a *physical machine* within the HPC.
 A node will have one or more CPUs, lots of memory (RAM), hard disks, network connections etc. 

**** types of nodes
a storage node, a master node, and computer nodes
- storage node :: home directories or research data stored, 
- master node :: deals with the operations of the HPC such as scheduling and most importantly, 
- compute nodes :: run your applications.

*** Scheduler

*** jobs
You submit your jobs to the scheduler by writing a small script called a job submission script. This will contain information such as the amount of memory you require, how long your job will run for etc. 
*** slot
A slot is what the scheduler uses to represent one or more CPU cores. One slot represents one CPU core.

The reason that cores are not simply refered to as cores is that one may wish to have two CPU cores per slot in the case of hyper threaded processors.
Queue [fn:nodes-core]
*** Queue
A queue is comprised of several slots on one or more nodes.

*** MPI
MPI=Message Passing Interface

*** GPU
GPU=graphics processing units 
** Starting ANSYS Fluent on a Linux System
4.1.3. Starting ANSYS Fluent on a Linux System, getting started guide



** 6GB 4 core vs 6 core 4GB
use 6 core is faster

** Nodes
https://docs.hpc.qmul.ac.uk/nodes/
- use "nxv" node for parallel
- "sm" and "dn" node don't support parallel
- The sm nodes are usually full so your job is more likely going to run on a dn node.
*** node status
>nodestatus


*** architecture type
~-l cpuarch=intel~  #Require architecture type=intel
~-l cpuarch=amd~  #Require architecture type=amd
*** node types
~-l node_type=dn~  #node type: dn
~-l node_type=nxv~ #node type: [[https://docs.hpc.qmul.ac.uk/nodes/nxv/#nxv-nodes][nxv]]
**** nxv node
node number: 36 \\
each node has 32 cores  \\

** Storage usage
To check how much disk memory used:
- ~qmquota~ 
- [[https://docs.hpc.qmul.ac.uk/storage/quota/][Quotas]] are used to keep track of storage space that is being used on per-user or per-group basis.

** Hold jobs
Holding a job means it remains in the queue but will not be considered for scheduling until the hold is removed or the requirement is met.
~qhold <job_id>~    # Hold a job
~qrls <job_id>~       # Release a job
** Further Information

- The [[https://docs.hpc.qmul.ac.uk/using/manpages/][man pages]] on the cluster systems give information on the queuing system and MPI functions.
-  The MPI Specifications contain information on the MPI functions including examples and advice.
-   [[https://docs.hpc.qmul.ac.uk/apps/hpclibraries/][HPC Libraries]]

** [[http://www.hpc.mcgill.ca/index.php/starthere/81-doc-pages/205-faq][Job exit status]]

| 137 | more resources are needed than what you asked for, or more than is available on the machine (memory, walltime, ...) |
|-11|	~JOB_EXEC_RERUN-- Job was rerun~ |

|-10 |	JOB_EXEC_FAILUID Invalid UID/GID for job|
|-4 | 	JOB_EXEC_INITABT-- Job aborted on MOM initialization|
|-3 |	JOB_EXEC_RETRY-- job execution failed, do retry |
|-2 |	JOB_EXEC_FAIL2 -- Job exec failed, after files, no retry
|-1 |	JOB_EXEC_FAIL1 -- Job exec failed, before files, no retry
|0|	Job Success!
|1|	General error
- Exit codes between 128 and 173 indicate that the process ended due to receiving a signal. Examples:
| 128 | 	Invalid argument to exit()                                  |
| 131 | 	SIGQUIT: ctrl-\, core dumped                                |
| 132 | 	SIGILL: Malformed, unknown, or priviledged instruction      |
| 133 | 	SIGTRAP: Debugger breakpoint                                |
| 134 | 	SIGABRT: Process itself called abort                        |
| 135 | 	SIGBUS: Bus error (on Guillimin: often a file system issue) |
| 136 | 	SIGFPE: Bad arithmetic operation (e.g. division by zero)    |
| 137 | 	SIGKILL (e.g. kill -9 command)                              |
| 139 | 	SIGSEGV: Segmentation Fault                                 |
| 143 | 	SIGTERM (probably not canceljob or oom)                     |
| 151 | 	SIGURG: Urgent condition on socket                          |

- Exit codes between 174 and 253 indicate a "Fatal error signal".
- Exit codes larger than 253:

|254|	Command invoked cannot execute
|255|	Command not found, possible path problem
|265|	SIGKILL (e.g. kill -9 command), possible out-of-memory error
|271|	SIGTERM (e.g. canceljob or oom), possible memory error

** Recovering files from snapshots

To recover a file from the snapshot simply copy it somewhere outside the .snapshots directory:
cp /data2/.snapshots/2018-6-22/home/exw692/e387_t/    /data/home/exw692/e387_onephase

** FAQ
***
*** Error: Non-conformal periodic interface with empty intersection.
This is likely due to incorrect specification of periodic offset values.
Please check the offset values specified  and recreate the interface.

Error: Couldn't intersect threads 29 and 30.


**** answer
1. the Geo part is not 120 degree, define the angle in the Geo and remesh
2. make the periodic domains database constrained 

    Create a database plane at the symmetry location.
    Project the periodic domains and their connectors to the plane.


This should force all points to be coplanar to a very tight tolerance.

You can use Examine, Database associativity... to verify that all appropriate grid points are constrained to the plane.


***  hwloc 1.11.1 has encountered what looks like an error from the operating system.
 L3 (cpuset 0x000003f0) intersects with NUMANode (P#0 cpuset 0x0000003f) without inclusion!
 Error occurred in topology.c line 981

answer:

don't use "sm" [[https://docs.hpc.qmul.ac.uk/nodes/][node]]

** References
https://sbcs-informatics.github.io/index.html
https://wiki.rc.ucl.ac.uk/wiki/ANSYS_Fluent_on_Legion
https://www.bwhpc-c5.de/wiki/index.php/Ansys
4.2. Running ANSYS Fluent in Batch Mode, getting started guide

* Glossary
** Residuals
\( R^\phi \) Residual in Fluent's pressure-based solver: 

imbalance in Eq.29.3 (user guide, 17.2)

** Transcript files 
- transscipt files (unlike journal files), cannot be read back into
the program

* Checklists
Determine relevant Reynolds number to estimate if the flow is turbulent
• Select a turbulence model and a near-wall treatment
• Estimate the physical dimension of the first grid point off the wall (y+)
• Generate the grid
• Perform the simulation
• “Reality” check (experiments, literature, model consistency, grid resolution)

* Parameter study
file:C:\akmkemin\Backup\ANSYS\FLUENT\Custom_Input_Parameters_Fluent.CIP-MultiMaterial.pdf

* Reading and Manipulating Meshes
** reading multiple meshes
There are three methods for loading multiple mesh files in Fluent:
- Using the multiple read function in Fluent
- Using TGrid/Fluent meshing
- Using tmerge

For further details, please refer to 5.3.18. Reading Multiple Mesh/Case/Data Files, user guide, fluent, 17
*** using the Multiple read Function in Fluent
After starting Fluent, follow the steps below from the GUI 
(note this option only works when running in serial, not parallel): 
1. Go to File > Read > Case and load the first mesh file.
2. Go to Grid/Mesh >Zone>Append Case File and read the second mesh file. 
3. Save the file and mesh.

*** using TGrid

 The following steps will explain how to combine these meshes into one 
(this also applies when creating a mesh individually with a large shape).

1. Start Tgrid in 2D or 3D. (Fluent Meshing 3D)
From File > Read > Mesh, select the mesh you want to read. 
The selected mesh file will be displayed in Mesh File (s). If you choose one by mistake, click Remove and select the wrongly selected file.
2. Press the OK button, and export the mesh by going to File > Write > Mesh.
3. read combined mesh in Fluent, fuse or merge the interface of two meshes
When loading to Fluent, it is necessary to set *the joining face* of each part. 
Please refer to [[What is the difference between the Fuse and Merge functions]]
 to learn about the difference between Fuse and Merge regarding this operation.
*** tmerge
Using tmerge First, create multiple mesh files, then combine them into a single mesh file using tmerge before starting the solver. 
You can also apply rotation, scaling, or translation prior to combining them in tmerge. 
1. Run utility tmerge -3d (in a 3D case) or enter utility tmerge -2d (in a 2D case) in the DOS command prompt or Linux/UNIX prompt. 
2. When prompted, enter the name of the output file after coupling to the input file name. 
3. For each input file, you can specify magnification, translation, or rotation. 
If you do not need to use any of those options, combine the inputs with the following TUI: 
utility tmerge -2d -cl -p my1.msh my2.msh final.msh

*Example of the use of tmerge (in a 2D case)*
Example of the use of tmerge (in a 2D case) user@mymachine : > utility tmerge -2d /* Specifies a 2D case */ Starting /Fluent.Inc/utility/tmerge2.1/ultra/tmerge_2d.2.1.13 Append 2D grid files. tmerge2D Fluent Inc, Version 2.1.11 Enter name of grid file (ENTER to continue) : my1.msh /* Name of input file*/ x,y scaling factor, eg. 1 1 : 1 1/* Specifies no scaling */ x,y translation, eg. 0 1 : 0 0 /* Specifies no translation */ rotation angle (deg), eg. 45 : 0 /* Specifies no rotation */ Enter name of grid file (ENTER to continue) : my2.msh /*Name of input file*/ x,y scaling factor, eg. 1 1 : 1 1 /* Specifies no scaling */ x,y translation, eg. 0 1 : 0 0 /* Specifies no translation */ rotation angle (deg), eg. 45 : 0 /* Specifies no rotation */ Enter name of grid file (ENTER to continue) : <ENTER> Enter name of output file : final.msh /*Name of output file*/ Reading... node zone: id 1, ib 1, ie 1677, typ 1 node zone: id 2, ib 1678, ie 2169, typ 2 . . done. Writing... 492 nodes, id 1, ib 1678, ie 2169, type 2. 1677 nodes, id 2, ib 1, ie 1677, type 1.

#+BEGIN_EXAMPLE
user@mymachine : > utility tmerge -2d /* Specifies a 2D case */ 
Starting /Fluent.Inc/utility/tmerge2.1/ultra/tmerge_2d.2.1.13 
Append 2D grid files.
 tmerge2D Fluent Inc, Version 2.1.11
 Enter name of grid file (ENTER to continue) : my1.msh /* Name of input file*/
 x,y scaling factor, eg. 1 1 : 1 1/* Specifies no scaling *
/ x,y translation, eg. 0 1 : 0 0 /* Specifies no translation */
rotation angle (deg), eg. 45 : 0 /* Specifies no rotation */ 
Enter name of grid file (ENTER to continue) : my2.msh /*Name of input file*/
x,y scaling factor, eg. 1 1 : 1 1 /* Specifies no scaling */ 
x,y translation, eg. 0 1 : 0 0 /* Specifies no translation */ 
rotation angle (deg), eg. 45 : 0 /* Specifies no rotation */
Enter name of grid file (ENTER to continue) : <ENTER>
Enter name of output file : final.msh /*Name of output file*/ 
Reading... 
node zone: id 1, ib 1, ie 1677, typ 1 
node zone: id 2, ib 1678, ie 2169, typ 2 . . 
done. 
Writing... 
492 nodes, id 1, ib 1678, ie 2169, type 2. 
1677 nodes, id 2, ib 1, ie 1677, type 1.
#+END_EXAMPLE

** Read multiple mesh/case/data in Fluent
> grid/zone/append case file
** Rotating mesh
Setting Up Domain → Mesh → Transform → Rotate
** Mesh Topologies of ANSYS FLUENT
- unstructured solver
the Ansys CFX/FLUENT Solver is an *unstructured solver* and a *structured mesh* will always be dealt with internally as an unstructured Mesh.
 
fluent uses *internal data structures* to assign an order to the cells,
faces, and grid points in a mesh and to maintain contact between adjacent cells.
Therefore, it does not require i,j,k indexing to locate neighboring cells. This gives you the flexibility to use the best mesh topology

* Mesh criteria

	Geometry/Mesh Requirements
		Axisymmetric geometries must be defined such that the axis of rotation is the axis of the Cartesian coordinates used to define the geometry
		
		different mesh resolutions are required depending on the near-wall model being used
		
		in most complicated 3D flow fields will be constrained by CPU time and
		computer resource limitations
		
		
		Solution-adaptive mesh refinement can be used to increase and/or decrease mesh density based on the evolving flow field, and therefore provides the potential for more economical use of grid points (and hence reduced time and resource requirements). See Adapting the Mesh (p. 1691) for information on solution adaption.
		
		
	Cell Quality
			orthogonal quality
				minimum orthogonal quality>0.01
			Aspect ratio: 
				No specific value, avoid sudden and large changes in cell aspect ratios in areas where the flow field exhibit large changes or strong gradients
			Skewness
				<0.95
		
** growth ratio
less than 1.2
** y plus
*** How to estimate the first cell height (y) for the mesh from the desired value of y plus (y+)?

Reference length, density, viscosity >> Re>> Cf (skin friction coefficient) >> wall shear stress, \tau_w >> friction velocity >> y plus

#2040008 
Known Parameters: density (rho), kinetic viscosity (mu), free stream velocity (U), characteristic length scale (L), and the desired y plus (y+).

Find: the first cell height (y).

The Reynolds number is Re = rho * U * L / mu.

The skin friction coefficient Cf can be calculated from Re. 
  flow on a plate, we have the following formula: Cf = 0.058*Re^(-0.2). 
  internal flows, we have: C_f = 0.079*Re^(-0.25), in which Re is based on pipe diameter.

Use C_f to predict the wall shear stress (\tau_w): tao_w = 0.5*C_f * \rho*U.^2.

From \tau_w compute the friction velocity U_\tau 
 U_\tau  = sqrt(\tau_w/\rho) .

Then, the first cell height can be calculated as: \delta y = y^+ \mu / (U_{\tau}  \rho).

*** Y plus for different turbulence models
For those who are interested, 11.06 is the y+ value where the linear velocity profile in the sublayer intersects with the logarithmic velocity profile in the log layer.

For the k-e model you should use y+ < 300. If y+ is below about 11 for the k-e model then it still works fine, but it doesn't make use of the fine near wall mesh, so it's a waste of mesh. Essentially the k-e model always uses the wall function approach. The wall function approach is not valid below y+ ~= 11/15, so we just ignore the mesh below y+ ~= 11. 

If you want accurate boundary layer predictions, such as separation prediction, then you should use the SST model with y+ < 2. 
In this case the SST model will switch to a low-Re formulation near the wall rather than the wall function formulation. 
SST will still work fine with 11 < y+ < 300, but the results will be fairly similar to the k-e model since it will be using wall functions.
 For 2 < y+ < 11 it will be a blend between wall functions and low-Re formulations. 

In some situations, such as accurate boundary layer heat transfer predictions or 
when using the transition model, an even lower y+ of about 1 is recommended with the SST model.

From: 4.16. Near-Wall Treatments for Wall-Bounded Turbulent Flows, theory guide

*** Check y plus value
For a 3D Case
1. Click Display-> Contour-> Turbulance-> Y Plus of the surface of interest.
2. Turn off Node Value display.
3. You can now check if the minimum and maximum Y+ forms an appropriate range 

For a 2D Case
1. Click Display-> Contour-> Turbulence-> Y Plus. You do not need to select any Surfaces 
2. Turn off Node Value display 
3. You can now check the value of Y+ (note to ignore the value of Y+ except for cells adjacent to the wall).

In a fine mesh, a recommended value of 1 for Y+ in a fine mesh, and 30 to 500 for a wall function.

To resolve the boundary layer, the near-wall distance should reflect y+<2  /with 15  elements in the boundary layer/. 
* Materials
** viscosity
constant viscosit
https://www.sharcnet.ca/Software/Fluent6/html/ug/node336.htm
* Cell zones conditions
* Boundary Conditions (BC)

** Turbulence Parameters

1000358  setting Turbulence Parameters at inlet for RANS 
two categories, those which are very sensitive to the inlet values and those which are less sensitive. 



*Parameters*
1. Specified Values. Spatially varying profiles can be specified using UDFs or boundary profiles
2. Intensity and Length Scale
3. Intensity and Viscosity Ratio
    + free stream boundaries in external flow, intensity <=1%, turbulent viscosity ratio =2
4. Intensity and Hydraulic Diameter

Perferred Parameters: intensity and length scale


k, \epsilon, \omega, or \overline{u_i' u_j'} must be specified for turbulence model
> https://www.sharcnet.ca/Software/Fluent6/html/ug/node217.htm

*Turbulence intensity*:
< 1%, low, 
>10%, high

All CFD simulations performed using a RANS turbulence model 
require boundary values for turbulence variables at all flow inlets. 


It is convenient to divide applications into two groups:

1. Applications requiring *very accurate description of the boundary profiles* 
at the inlet in order to obtain an accurate solution. 
For instance, when simulating flow over a *backwards facing step*, if the inlet is very close to the step, 
the predicted reattachment length downstream of the step depends strongly on the turbulence profiles.

2. Applications where *single, uniform values* can be used for the turbulence variables at the inlet. 
These can be further divided into two categories, 
those which are very sensitive to the inlet values and those which are less sensitive. 

For instance, some *external aerodynamics* applications may be sensitive to turbulence levels at free stream inlet boundaries, 
whereas in flows driven by mechanical input, such as pumps or fans,
 the solution may be relatively insensitive to the turbulence values so long as they are reasonably realistic.

*Backflow values* for turbulence values are also required at *pressure outlet* boundaries. 

Outlets should always be located such that they are *far* enough downstream 
of any areas of interest in the simulation 
that backflow values will not have any effect on the converged results.


LES and DES have very different requirements for 
inlet boundary conditions than those of RANS models. 


*Model Comparison*
- Applies to all RANS models 
- Any variation of the k-ε family of models
- Any variation of the k-ω family of models
- The Spalart-Allmaras model
- Reynolds stress models
- v2fmodel


Four options to specify boundary conditions for the turbulence models:


1. Explicitly input Values, k, \epsilon, \omega Spatially varying profiles 
can be specified using UDFs or boundary profiles

2. Intensity,I,  and Length Scale, l
    +  Length scale is related to size of large eddies that contain most of energy.
            - For boundary layer flows: l ≈ 0.4 δ99
            - For flows downstream of grid: l ≈ opening size

3. Intensity and Viscosity Ratio
    + External flow, 1<\mu_t/\mu < 10
    + Turbulence intensity, I=u_rms ' /U <20%

4. Intensity and Hydraulic Diameter
  + Ideally suited for internal flows (duct/pipe flow)

Options 2-4 allow the user the opportunity to provide inflow values in terms of physically intuitive quantities, 
which Fluent then transforms internally into equivalent values of the turbulence model variables. 
Interested readers can find the details of these transformations in Section 7.3.2 of the Fluent 12.0 User’s Guide. 

 The checklist below provides strategies that can be used to determine 
which option to use in your case and how to determine the values.
*** Checklist
1. Do not ever use the default settings (in Fluent v12.0 or Fluent 6.x or lower) for boundary values for whatever turbulence model was selected.
a. There is one possible exception. The default for the Spalart Allmaras model is modified turbulent viscosity = .001 m2/s. 
That is approximately equivalent to air at standard temperature and pressure with a turbulent viscosity ratio of 70, 
which could be a reasonable value in some cases, although it would probably be too high for many external aerodynamics calculations.

2. If your application does not require specification of detailed, spatially varying turbulence profiles at the inlet, 
choose one of the following options
a. Intensity and Hydraulic Diameter – this is the preferred option for *duct flows*.
 It can be used for any flow but hydraulic diameter is only meaningful only when the inlet is the cross section of a pipe or duct. Calculate the turbulence intensity as described in the FLUENT 12.0 User’s Guide, Section 7.3.2, Equation 7.3-1.

b. Intensity and Length Scale – this is the preferred approach when it is reasonably easy to estimate the turbulence length scale. 
Examples include :
- *flow downstream of obstructions* such as turning vanes or perforated plates (length scale ≈ size of flow openings)
- *boundary layer flows* (length scale ≈ 40% of boundary layer thickness). 
- Downstream of a flow obstruction, turbulence intensity is generally high. 
Correlations or data may be available, but in the absence of additional information such as these, a value of 10% will provide a good starting point.

c. Intensity and Viscosity Ratio – in indeterminate cases the *turbulent viscosity ratio* (TVR) is a useful option. 
Guidelines suggested in the FLUENT 12.0 User’s Guide, Section 7.3.2, can be summarized as follows:
- i. In flows such as *high Reynolds number boundary layers*, shear layers, fully developed duct flows the viscosity ratio could be
 in the range of 100 to 1000.
- ii. For *free stream boundaries* in *external flows*, recommended values are intensity <= 1% and TVR = 2.
In a completely indeterminate case, 10 is the recommended value for viscosity ratio. 

Turbulence intensity may be known from measurements or values that have been reported for similar flows, 
but in the absence of such additional information a moderate value for turbulence intensity (4-5%) is recommended.

Whenever there is any uncertainty about one or more of the inputs for turbulence values, 
a sensitivity study can be performed by recalculating the flow using one or more different values of the unknown variables to 
determine if they have a significant effect on the simulation results.

3. In applications requiring accurate representation of a boundary layer at the inlet, 
a spatially varying profile of the turbulence boundary values will be needed. 
Profiles can be created in a number of ways. If experimental data is available, it can be put into an appropriately formatted boundary profile file; however it is unusual to have measurements for every single variable used by the turbulence
model. For instance in the k- model, data might be available for k but would probably not be available for . In certain cases, correlations may be available for profiles of the turbulence model variables. These can be used either alone or in conjunction with a UDF (see Example 2 here for an example of implementing profiles from a correlation through a UDF) for instance a profile of experimental data might be used for turbulence kinetic energy together with a UDF with a correlation for dissipation. For internal flows with a fixed flow rate, a fully developed profile can be generated easily and quickly by performing an auxiliary 3D periodic calculation to generate the inlet profile.

4. If you are using the *Reynolds stress model* and select “K or Turbulent Intensity” to specify the Reynolds stresses, uniform values for each of the individual Reynolds stress components will be assigned based on the value that you have entered for the turbulence kinetic energy or intensity as described in Section 7.3.2 of the FLUENT 6.3 User’s Guide.

5. *Backflow values at pressure outlets*

a. If reversed flow does *not* take place, either during the iterations or as part of the final solution, then it does not matter what values are entered in the panel.

b. If *reversed flow* does take place then it is still not so important what values are used unless 
they are dramatically different from the values in regions of the boundary without reversed flow. 
That can cause convergence problems in some cases. 
Intensity and Viscosity Ratio is generally a good choice, starting with values of 10 for intensity and 100 for viscosity ratio.
c. After the first few iterations, the solution near the outlet can be inspected and backflow values can be adjusted if necessary
*** Reference
1000358-turbulent-parameters-inlet-RANS.pdf
** inlet 



*** static pressure
supersonic/initial gauge pressure
The Supersonic/Initial Gauge Pressure is ignored by FLUENT whenever the flow is subsonic,


** interior
- interior :: faces have fluid cells on both sides and  do not require any boundary conditions to be set.

** pressure outlet
- input: relative static pressure ( gauge pressure)
- the specified static pressure is used only when the 
flow is *subsonic*

*** operating pressure
use 0 for air >> easy for post
use large value for water to reduce roundoff error

*** Supersonic/Initial Gauge Pressure 
Whenever the flow is *subsonic*, the Supersonic/Initial Gauge Pressure is ignored by ANSYS Fluent, 
in which case it is calculated from the specified stagnation quantities.

The static pressure (termed the Supersonic/Initial Gauge Pressure) must be specified if the inlet flow is supersonic 
or if you plan to initialize the solution based on the pressure inlet boundary conditions.

** Periodic BC
periodic BC includes:
- *conformal* periodic BC: the nodes of the two zones  have to match one-for-one.
- *Non-conformal* Periodic BC :  the nodes of the two zones do not have to match one-for-one.
  + *non-conformal periodic BC can't be used in 3D sliding mesh*



*** Non-conformal interface with the periodic boundary condition option enabled

*Non-conformal interfaces* can be used to /implement a periodic boundary condition/  (see Periodic Boundary Conditions). 

The advantage of using a mesh interface is that, unlike the standard periodic boundary condition,
 the nodes of the two zones do not have to match one-for-one.

The BC type is setup as *interface* rather than periodic

> 5.4.1.1. The Periodic Boundary Condition Option
> https://www.sharcnet.ca/Software/Ansys/16.2.3/en-us/help/flu_ug/x1-2670007.4.1.html


*** Creating Conformal Periodic Zones
The conformal periodic boundaries can be created in the meshing mode of Fluent or GAMBIT when
you are generating the volume mesh. See the Fluent Meshing User’s Guide or the GAMBIT Modeling
Guide for more information. Alternatively, you can create the conformal periodic boundaries in the
solution mode of Fluent using the mesh/modify-zones/make-periodic text command
- For conformal periodic boundaries, the periodic zones must have identical meshes.
- mesh nodes should match 

> mesh/modify-zones/list-zones
>/mesh/modify-zones/make-periodic
Periodic zone [()] 10
Shadow zone [()] 9
Rotational periodic? (if no, translational) [yes] yes
Create periodic zones? [yes] yes

Note:
When you create a conformal periodic boundary, Fluent will check to see if the faces on the selected zones “match” (that is, whether or not the nodes on corresponding faces are coincident). The matching tolerance for a face is a fraction of the minimum edge length of the face. If the periodic boundary creation fails, you can change the matching tolerance using the mesh/modify-zones/matching-tolerance text command, but it should not exceed 0.5 or you may match up the periodic zones incorrectly and corrupt the mesh.

mesh → modify-zones → matching-tolerance

** outflow
Outflow boundary conditions in ANSYS Fluent 
are used to model flow exits /where the details of the flow velocity and pressure are not known prior to solution of the flow problem/.

- limitation:  outflow boundary conditions are not compatible
with pressure inlets.

* Sliding Mesh
** requirement and limitation 
Chapter 10: Modeling Flows Using Sliding and Dynamic Meshes, user guide, fluent

** solution strategies
help/flu_ug/flu_ug_sec_slide_solve.html
*** limitations for periodic repeats option as part of the mesh interface:
- The edges of the second interface zone must be offset from the corresponding edges of the first interface
zone by a uniform amount (either a uniform translational displacement or a uniform rotation angle).
- Some portion of the two interface zones must overlap (that is, be spatially coincident).
- The non-overlapping portions of the interface zones must have identical shape and dimensions at all
times during the mesh motion.
- One pair of *conformal periodic zones* must be adjacent to each of the interface zones. For example, when
you calculate just one channel and blade of a fan, turbine, and so on, you must have *conformal periodics*
on either side of the interface threads. This will not work with non-conformal periodics.

Note that for 3D cases, you cannot have more than one pair of conformal periodic zones adjacent
to each of the interface zones.

* Mesh interfaces
** interface
- interface :: 
    + Periodic Boundary Condition
allows you to create a non-conformal periodic boundary condition interface.

Non-conformal interfaces can be used to implement a periodic boundary condition like that described
for conformal periodic boundaries (see Periodic Boundary Conditions (p. 365)). The advantage of using
a mesh interface is that, unlike the standard periodic boundary condition, the nodes of the two zones
do not have to match one-for-one.

Error: Periodic Boundary Condition cannot be applied on more than two interface zones at a time.

Please select only one zone from each of the Interface Zones.

** interface options
*** Periodic Bounadary Condition: create a *non-conformal periodic boundary condition interface*.
*** Periodic Repeats
is relevant when you have two zones coming together, such as a rotor and stator. 
When the two zones move, a portion of the geometry will intersect and that will be an interior zone, 
but on either side of the interior, the zone is termed periodic repeats.
*** Coupled Wall : fluid flow would not pass across the interface,
as the interface is acting as a wall zone
indicates (if enabled) that the interface acts as a *thermally coupled wall.*
*** Matching
is relevant if only interface *interior zones* should be created, that is, 
the interface boundary zones should be empty because the interface zones on both sides are aligned. 
With the Matching option, even interface zones that are not perfectly aligned are treated as if they would be, 
however, if the discrepancy between the interface zones on both sides exceeds default thresholds, 
then warning messages will be displayed. 

Note that the Matching option is also compatible with periodic boundary conditions. 
See Matching Option for more information about the recommended uses of this option.
*** Mapped
enables an alternative approach for *modeling coupled walls* between zones. 
This approach is more robust (but less accurate) than the standard non-conformal interface formulations 
when the interface zones penetrate each other or have gaps between them.

Note:  The Mapped option does not support multiple face zones on the same side of the interface, 
you must select exactly one face for each interface zone. The Mapped option is not compatible with shell conduction.
* Moving Reference Frame :MFR:
- could be steady and unsteady

If Moving Reference Frame is used for fluid zone, a “Stationary Wall”
means stationary with respect to the moving zone!
 
 Recommended specification of wall BCs for all moving reference frame problems
– Set Rotation Axis and Origin same as fluid zone
– For stationary surfaces (in the absolute frame) use zero Rotational Speed,Absolute
– For moving surfaces, use zero Rotational Speed, Relative to Adjacent Cell Zone
– Enable pseudo transient

* RANS Model
file:turbulence_modelling.org
Refer to user guide for selecting turbulence model, For theory, read turbulence model in theory guide
- turbulence model available in ANSYS
file:figures/turbulence_model_ansys.png
** Spalart- Allmaras
-  Economical for large meshes. 
- Performs poorly for 3D flows, free shear flows, flows with strong separation.
-  Suitable for mildly complex (quasi-2D) external/internal flows and BL flows under pressure gradient 
(e.g. airfoils, wings, airplane fuselage, missiles, ship hulls).
** k-e model
- The ε equation contains a term which cannot be calculated at the wall. 

Therefore, wall functions must be used.
- good for free shear and non-wall bounded flow 
*** limit
- performs poorly for flows with strong separation, large streamline curvature, and large pressure gradient.

http://web.mit.edu/2.972/www/reports/airfoil/airfoil.html

*** Standard k-epsilon: 
Robust. Widely used despite the known limitations of the model. 
Performs poorly for complex flows involving severe separation, strong stream line curvature. 
Suitable for initial iterations, initial screening of alternative designs, and parametric studies.

** RNG k- epsilon: 
Suitable for complex *shear flows* involving rapid strain, moderate swirl, vortices, and locally transitional flows 
(e.g., b.l. separation, massive separation and vortex-shedding behind bluff bodies, stall in wide-angle diffusers, room ventilation)

** Realizable k- epsilon: 
Offers largely the same benefits and has similar applications as RNG. 
Possibly more accurate and easier to converge than RNG.

** Standard k-omega: 
Superior performance for wall-bounded BL, free shear, and low Re flows.
 Suitable for complex boundary layer flows under adverse pressure gradient and separation (external aerodynamics and turbomachinery). 
Can be used for transitional flows (though tends to predict early transition). 
Separation is typically predicted to be excessive and early.

** SST k-omega: Similar benefits as SKO. 
Dependency on wall distance makes this less suitable for free shear flows.

** Ryenolds Stress Model (RSM): Physically the soundest RANS model. 
- Avoids isotropic eddy viscosity assumption. 
- More CPU time and memory required. Tougher to converge due to close coupling of equations. 
- Suitable for complex 3D flows with strong streamline curvature, strong swirl/rotation 
(e.g. curved duct, rotating flow passages, swirl combustors with very large inlet swirl, cyclones).

>user guide for selecting turbulence model, For theory, read turbulence model in theory guide
** Guideline checklist
Successful turbulence modeling requires engineering judgment of:
- Flow physics
- Computer resources available
- Project requirements
-  Accuracy
- Turnaround time
-  Near-wall treatments
- Modeling procedure
-  Calculate characteristic Re and determine whether the flow is turbulent.
-  Estimate wall-adjacent cell centroid y+ before generating the mesh.
-  Begin with SKE (standard k-ε) and change to RKE, RNG, SKW, SST or
V2F if needed. Check the tables in the appendix as a starting guide.
- Use RSM for highly swirling, 3-D, rotating flows.
-  Use wall functions for wall boundary conditions except for the low-Re
flows and/or flows with complex near-wall physics.

** Turbulence Model for attached flow
k -e model
** Turbulence Model for separated flow

for *separation* prediction, then you should use the *SST model* with y+ < 2.

** Transition SST Model
4 equations model
SST K- \omega transport equations + two other transport equations 
( intermittency and transition onset criteria)

- the Transition SST model
*** mesh requirements
y plus << 1
growth ratio 1.15 or less
aspect ratio for the near wall cells <200
*** solver requirements
Very often, the steady state solution can be achieved.
• It is difficult to converge transition models with the *segregated solver* and the
SST-T4 ( i.e. γ ─ θ) model can even clip to a wrong solution unless a pressure based
coupled solver is used.
• Pressure-based coupled and, in particular, the pressure-based coupled pseudotransient
solver is preferred.
• Green-Gauss Node-Based or Least Squares Cell-Based gradient reconstruction
would be needed.
• Use of higher order discretisation schemes (at least 2nd order) for mean
momentum and energy equations is a must.
• Use of the 2nd order discretisation scheme for turbulent quantities is generally
recommended, however, it has been found that no visible difference existed in
the results for NACA0012 airfoil when using either the 1st or 2nd order
discretisation for turbulent quantities.
• The convergence is always more challenging with higher order descretisation
for turbulent quantities. Use High Order Term Relaxation in such cases


*** Reference
Guidelines for Setting up Laminar -Turbulent Transition Cases in ANSYS CFD

2039349_transition_models.pdf
** SST
*** what is SST used for ?
- Low-Re turbulent models( e.g. the SST model) >> resolve the viscous sublayer (the low -Re region) ( y+ <5)
- In case of flow separation due to pressure gradient

The SST model uses the *automatic wall function*
which allows for integration of the governing
equations directly to the wall (a low Reynolds
number treatment) and so can *better predict boundary layer separation*.

*** mesh requirement


viscous sub-layer (y+ ≤ 2).

*** Refernce
Menter 2009 Review of the shear-stress transport turbulence model experience from an industrial perspective
** Curvature Correction
Goal: account for  *steamline curvature* and *system rotation*
- empirical function

a limit of eddy-viscosity models:
insensitive to streamline curvature and system rotation

Note
The curvature correction option should therefore be used with caution for the RNG and Realizable (-) turbulence models (which have their own terms to include rotational or swirl effects)


references
Spalart and Shur 
>> P. R. Spalart and M. L. Shur. "On the Sensitization of Turbulence Models to Rotation and Curvature". Aerospace Sci. Tech. 1(5). 297–302. 1997. >

Shur et al. >> M. L. Shur, M. K. Strelets, A. K. Travin and P. R. Spalart. "Turbulence Modeling in Rotating and Curved Channels: Assessing the Spalart-Shur Correction". AIAA Journal. 38(5). 2000. 2000. 

** SAS
SAS : Scale Adaptive Simulation
- SAS is less sensitive to the grid compared to DES
- SAS is widely accepted as the industry standard for *unsteady* turbulent simulation


** Y plus vs Turbulence model
30-300 >> k-e
0.1-2.5 >> k-omega
k -omega SST get better results for external flow


** unsteady Turbulence model
URANS with good turbulence models can occasionally predict vortex shedding, i.e. largest unsteady scales
–URANS often falls short of capturing the remaining large scales

file:
** References
Turbulence_model-selection-guide-fluent6

file:C:\akmkemin\Backup\academic\Notes\turbulence_modelling\turbulence_modelling.doc

** Guideline
Successful turbulence modeling requires engineering judgment of:
- Flow physics
- Computer resources available
- Project requirements
-  Accuracy
- Turnaround time
-  Near-wall treatments
- Modeling procedure
-  Calculate characteristic Re and determine whether the flow is turbulent.
-  Estimate wall-adjacent cell centroid y+ before generating the mesh.
-  Begin with standard k-ε and change to RKE, RNG, SKW, SST or
V2F if needed.
- Use RSM for highly swirling, 3-D, rotating flows.
-  Use wall functions for wall boundary conditions except for the low-Re
flows and/or flows with complex near-wall physics.




high speed *external aerodynamic flows*:

-To reduce the computational time:
 Spalart-Allmaras model (with Y+ < 2); 

- ω -based models or ε-based models with *enhanced wall treatment* 
  + resolve viscous sublayer

- accurate pressure-drop or drag calculations >> low Re model (SST, k-\omega) (recommended)

- k -omega SST get better results for external flow

-  *separation* prediction due to adverse pressure (e.g. airfoil), then you should use the *SST model* with y+ < 2.

- if separation only due to sharp changes in the geometry, an ε-based wall function approach is more than sufficient

** Y plus vs Turbulence model
- 30-300 >> k-e + standard wall function
- 0.1-2.5 >> k-omega SST, Enhanced wall model
** Transition model
- the Transition SST model
*** mesh requirements
y plus << 1
growth ratio 1.15 or less
aspect ratio for the near wall cells <200
*** solver methods
Very often, the steady state solution can be achieved.
• It is difficult to converge transition models with the *segregated solver* and the
SST-T4 ( i.e. γ ─ θ) model can even clip to a wrong solution unless a pressure based
coupled solver is used.
• Pressure-based coupled and, in particular, the pressure-based coupled pseudotransient
solver is preferred.
• Green-Gauss Node-Based or Least Squares Cell-Based gradient reconstruction
would be needed.
• Use of higher order discretisation schemes (at least 2nd order) for mean
momentum and energy equations is a must.
• Use of the 2nd order discretisation scheme for turbulent quantities is generally
recommended, however, it has been found that no visible difference existed in
the results for NACA0012 airfoil when using either the 1st or 2nd order
discretisation for turbulent quantities.
• The convergence is always more challenging with higher order descretisation
for turbulent quantities. Use High Order Term Relaxation in such cases


*** Reference
Guidelines for Setting up Laminar -Turbulent Transition Cases in ANSYS CFD

2039349_transition_models.pdf
** k-e model
- The ε equation contains a term which cannot be calculated at the wall. Therefore,
wall functions must be used.
- performs poorly for flows with strong separation, large streamline curvature, and large pressure gradient.
** Realizable k-e model
Realizable k-e model differs from standards k-e model in two ways:
-  new Eq for the turbulent viscosity
- new Eq for dissipation rate, \epsilon
*** advantages
- better performance for flows involving rotation, boundary layers under strong
adverse pressure gradients, separation, and recirculation

** SST k -\omega model
- Fundamentals
   + uses blending of \epsilon and \omega equations for specific dissipation

- Advantages
– overcomes sensitivity to inlet and far-field boundary values
– natural description of near wall turbulence (optional)
– to some extent can handle boundary layer transition
– less diffusive than Standard k-e Model

- Drawbacks
– sometimes under diffusive for complex shear and strain
– sometimes difficult to converge
• Recommended usage
– wall bounded (external) flow, e.g. airfoils, compressors, turbines
without massive interaction of shear layers
– prediction of wall heat transfer

** SST
- SST model :: is a hybrid two-equation model that combines both k-e and k-\omega models
- The k-\omega model performs much better than k-e models for boundary layer flows
- Wilcox’ original k- \omega is overly sensitive to the freestream value (BC) of \omega, while the k-e model is not prone to such problems

The SST model uses the *automatic wall function*
which allows for integration of the governing
equations directly to the wall (a low Reynolds
number treatment) and so can *better predict boundary layer separation*.

– For this to happen, the first grid point should lie within the
viscous sub-layer (y+ ≤ 2).
– Otherwise the Universal *Law of The Wall* for turbulence is used.
** Transition SST Model
4 equations model
SST K- \omega transport equations + two other transport equations 
( intermittency and transition onset criteria)

**  Scale Resolving Simulations
*** mesh and time step requirement

fine meshing 
small timestep
** References
theorgy guide

Turbulence_model-selection-guide-fluent6


* Turbulence Parameter 
why do we need turbulence parameters?
-  To represnt a BL or fully-developed Turbulent flow at the inlet
- Turbulence model needs these parameters

Turbulence parameters are needed for turbulence models at BCs such as *inlet*, *outlet* and *far-field* boundary
To accurately represent a BL  or fully-developed turbulent flow at the inlet:
- Ideally, set the turbulence quantities by creating a profile file from experiental data or empirical formulas (UDF)
- When accurate profiles of turbulence quanitites are unkown, use *uniform values*.

*Turbulence Intensity*, I:

  I = u'_{rms}/U
- u'_{rms}: root-mean-square of the velocity fluctuations  (u')
- U : mean flow velocity (main part), u = u' + U
I < 1%, low
I > 10%, high

- Turbulent length scale :: \ell, a physical quantity related to  the size of the large eddies 

- Turbulent Viscosity Ratio :: \mu_t/\mu
   + turbulent viscosity ratio is directly proportional to Re_t (Re_t =k^2/\epsilon \nu), \mu_t/\mu ~ Re_t
- For high Re BLs, shear layers, and fully developed duct flows, Re_t is the order of (100, 1000)
- For the freestream boundaries of most external flows,  1< \mu_t/\mu <10 
>  [[https://www.sharcnet.ca/Software/Fluent6/html/ug/node217.htm][6.3.2.1. Determining Turbulence Parameters]]

*Relationships for Deriving Turbulence Quantities*
turbuelent kinetic energy, k
\[
k=3/2(UI)^2
\]



** setting Turbulence Parameters at inlet for RANS 
1000358

two categories, those which are very *sensitive* to the inlet values and those which are less sensitive. 
e.g.  some *external aerodynamics* applications may be *sensitive* to turbulence levels at free stream inlet boundaries, 
whereas in flows driven by mechanical input, such as pumps or fans, the solution may be relatively
 insensitive to the turbulence values so long as they are reasonably realistic.

*Parameters*:
1. Specified Values. Spatially varying profiles can be specified using UDFs or boundary profiles
2. Intensity and Length Scale
3. Intensity and Viscosity Ratio
    + *free stream boundaries in external flow*, intensity <=1%, turbulent viscosity ratio =2
4. Intensity and Hydraulic Diameter

Perferred Parameters: intensity and length scale

length scale:
for water tank, 5% of channel width
** References
>  [[https://www.sharcnet.ca/Software/Fluent6/html/ug/node217.htm][6.3.2.1. Determining Turbulence Parameters]]

* Near-Wall Treatments for Wall-Bounded Turbulent Flows
- wall functions :: a set of laws that serve as *boundary conditions* for momentum, energy, species and turbulence quantities.
** options/types
high Re >> Standard and Non-equilibrium Wall Function
low Re >> Enhanced Wall Treatment or Low-Re Option
- *wall function* model : viscous and buffer layer not resolved
  
  + standard wall function
  + Scalable Wall Functions
  + Non-Equilibrium wall functions
  + 30< y+ < 300
  + k-e, RSM
  + for high Re

*Near wall model* (Low- Reynolds number model) : viscous layer is resolved
  + Low Re
  + EWT-\epsilon
  + ML- \epsilon
  + y + < 1
** Purpose of  near wall modeling 
- frictional drag calculation for external flow
- pressure drop for internal flow
- Pressure drag for bluff bodies is dependent upon extent of separation zones

** Reference
2_wall_modeling.pdf
4.16. Near-Wall Treatments for Wall-Bounded Turbulent Flows, theory guide
** Standard wall functions


*** what is wall function?
- law of the wall for mean velocity 
- based on the work of Launder and Spalding (B. E. Launder and D. B.Spalding. "The Numerical Computation of Turbulent Flows". Computer Methods in Applied Mechanics and Engineering. 3. 269–289. 1974.)
*** Good for?
- high Re flow >> 1e6
*** not good for?
severa pressure gradient
*** assumptions of wall function?
- constant wall shear stress and local equilibrium  assumptions

*** advantages and limits?

For Reynolds number Re > 1e6, non-equilibrium wall functions  for which you cannot afford
to resolve the viscous sublayer.

- There is little gain from resolving the viscous sublayer. The choice of  core turbulence model is more important.



** Scalable Wall Functions
- avoid the deterioration of standard wall functions under grid refinement below y* <11. 
These wall functions produce consistent results for grids of arbitrary refinement.
*** what is it used for?

force the usage of the log law in conjunction with the
standard wall functions approach.

*** Good/valid for?
- mildly separating, reattaching, or impinging flows.
** Non- equilibrium wall function
- account for pressure gradients
*** what is it used for?
complex flows involving separation, reattachement
- flow subjected to pressure gradient
** Invalid case for wall functions
low-Reynold-number or near-wall effects (for example, flow through a small gap or highly viscous,
low-velocity fluid flow).
• Massive transpiration through the wall (blowing/suction).
• Severe pressure gradients leading to boundary layer separations.
• Strong body forces (for example, flow near rotating disks, buoyancy-driven flows).
• High three-dimensionality in the near-wall region (for example, Ekman spiral flow, strongly skewed 3D
boundary layers).

** Enhanced Wall Treatment ε-Equation (EWT-ε) : near-wall modeling 
 a two-layer model + enhanced wall functions

if  ( y+ =1 ), then the enhanced wall treatment will be identical to the traditional two-layer zonal model.

Using *enhanced wall treatment* if:
-  The characteristic Reynolds number is low
-  Near wall characteristics need to be resolved.
- The physics and near-wall mesh of the case is such that y+ is likely to vary significantly over a wide portion of the wall region.

*** mesh requirement
-  avoid placing the first cells in the buffer layer (5 < y+ < 30).

*** two-layer model for EWT
- specify both e and \mu_t in the near wall cells
- domain are subdivided into a viscosity-affected region and a fully turbulent region
** Menter-Lechner ε-Equation (ML-ε)
** y+ Insensitive Wall Treatment ω-Equation
default for all \omega-equation based models
** wall boundary conditions for \omega equation
In SST and Standard k-\omega, the wall value of \omega 
\[
\omega_w = \frac{\rho (u*)^2}{\mu} \omega+
\]

* Solution Methods
** solver selection guide
-  Steady-state  >> SIMPLE or SIMPLEC
- Transient >> PISO (highly recommended)
- Fractional Step Method: less expensive than PISO, Avilable when NITA is enabled.
- If the above divergence, used Coupled

You can use the non-iterative solver for transient problems in order to increase the speed and efficiency of the calculations. 

> (see Time-Advancement Algorithm in the Theory Guide) 
> 29.3.1. Choosing the Pressure-Velocity Coupling Method

> *Choosing the Solver* in the *User's Guide*
file:C:\akmkemin\Backup\ANSYS Tutorial\FLUENT\fluent_files\Solver tips and tricks
*** factors for selecting a solver
- model availability for a given solver
- Solver performance for the given flow conditions
- mesh size and computer memory

*** Solver for poor mesh
- Coupled is more robust (easy to converge)
- *Pseudo Transient* option is recommended in the Pressure based Coupled Solver for tricky-to-converge problems

  
*** steady state
- SiMPE is recommended
Coupled scheme
   + works very efficiently in steady-state situations, or for transient problems when larger time steps are required.
- solves all equations for phase velocity corrections and shared pressure correction simultaneously

** Coupled  solver
-  specify the *Courant number* in the Solution Controls task page, which is set at 200 by default. \\
If ANSYS Fluent immediately diverges in the AMG solver, then the CFL number is too high and should be reduced.

Reducing the CFL number below 10 is not recommended since it would be better to use the segregated algorithm
 for the *pressure-velocity coupling*.

In most transient cases, the CFL number should be set to  1e7 with an explicit relaxation of 1.0.


-  specify the *Explicit Relaxation Factors* for Momentum and Pressure, which are set at 0.75 by default.

If high-order momentum discretization is used, you may need to decrease the explicit relaxation to 0.5. 

For cases with very skewed meshes, reducing the *explicit relaxation factor* to 0.25. 


For more information about these options, refer to Pressure-Velocity Coupling and Steady-State Iterative Algorithm in the Theory Guide.


** Pressure based coupled solver settings for poor meshes
- *Coupled solver* is more stable than segerated solver (SIMPLE, SIMPLEC, ect )

- enable "*Pseudo-transident* " option
  + Pseudo-Transient is a form of *implicit under-relaxation* for solving *steady-state simulations*
  + it utilizes transient-like terms in the discretization of transport equations
  + it is the default steady-state convergence method in CFX
  + it improves the solver convergence for flows on highly anisotropic meshes, and for reference frame
      ( turbo-machinery flow)
    + viscous meshes( prisms, hexcore/cutcell) generally have high-anisotropy

- *automatic time-step* method with "user specified" length scale
  + specified length scale is basde on the characteristic length of the geometry
    + chord length of a wing
    + duct diameter
  + trial and error on a range of length scales to optimize its setting for your application
      and meshing practices may be needed
  + it is recommended to set the verbosity to 1 to get a feeling of the pseudo-time step size

- larger length scales can drive the solution towards steady state more quickly but
oscillations in the final solution can be large

- fastest convergence can be achievved using a larger length scale for early
iterations and a smaller length scale after that:
  + can be automated via calculation activities or journaling

verbosity
verbosity is set to 1, only the equation name, tolerance, and residuals are printed. 
e.g.

k equation:                  #Eq name
 tol.   1.2803e-09       #tolerance
    0   2.5464e-03       #residual
    1   4.8560e-07

omega equation:
 tol.   1.5291e-02
    0   1.2594e+02
    1   1.9241e-02

*** Discretizations and 
- PRESTO is not remmended on cut-cell meshes with poor mesh quality
*** high-oder term relaxations
- can help with converging cases on poor quality meshes using 2nd order discretizations
*** poor mesh numerics
By default Fluent applies PMN only to cells with:
- left handed faces
- Negative volumes
TUI command
~solve/set/poor-mesh-numerics~

The corrected solution on poor cells can be of oth, 1st, and 2nd order
- oth order is the most aggresive
- 2nd order is the most conservative
*** report poor elements
~mesh/repair-improve/report-poor-elements~

** Choosing the Spatial Discretization Scheme
For more information about the different gradients,
see /Evaluation of Gradients and Derivatives/ in the Theory Guide

The three gradients that are available in ANSYS Fluent are
- Green-Gauss Cell Based
- Green-Gauss Node Based : tetra mesh
- Least Squares Cell Based
*** Choosing the Pressure Interpolation Scheme
**** PRESTO! and body-force-weighted 
- default, PRESTO!
-For problems involving large body forces, the body-force-weighted scheme is recommended.
- For flows with *high swirl numbers*, *high-Rayleigh-number natural convection*, *high-speed rotating flows*,
and flows in strongly curved domains, use the PRESTO! scheme.
*** first oder accuracy vs second order accuracy
- first order yields better convergence, less accurate
- first order is not accepted in the journal paper
- in most cases,  start with second order
- if you run into convergence difficulties with the second-order scheme, you should try the first order
scheme
*** First-to-Higher Order Blending
When 2nd order is not converged and 1st order is not accurate.
accuracy. One approach to achieving improved accuracy while maintaining good
stability is to use a discretization blending factor.

This feature can be invoked using the following text command
~solver/set/numerics~
Enter a value between 0 and 1 when asked for the blending factor: 1st-order to higher-order
blending factor [min=0.0 - max=1.0]
* Solution Controls
** Courant Number 
Courant–Friedrichs–Lewy ([[https://en.wikipedia.org/wiki/Courant%E2%80%93Friedrichs%E2%80%93Lewy_condition][CFL]]) condition is a necessary condition for convergence 
while solving certain partial differential equations (usually hyperbolic PDEs) numerically by the method of finite differences.
*** choose CFL value
The value of C_max changes with the method used to solve the discretised equation, 
especially depending on whether the method is explicit or implicit.

- *explicit* (time-marching) solver is used then typically C_max = 1.
- *Implicit* (matrix) solvers are usually less sensitive to numerical instability and so larger values of  C_max  may be tolerated.


*** Definition of one dimensional case
\[
C=u \frac{\Delta t}{ \Delta x} \leq C_{max}
\]
- u: magnitude of the velocity 
- \Delta t: time step
- \Delta x: length interval
The value of C_max changes with the method used to solve the discretised equation, 
especially depending on whether the method is explicit or implicit.

- *explicit* (time-marching) solver is used then typically C max = 1.
- *Implicit* (matrix) solvers are usually less sensitive to numerical instability and so larger values of  C_max  may be tolerated.

*** two or n-dimensional case
\[
C=\frac{u_x \Delta t} {\Delta x} +\frac{u_y \Delta t}{\Delta y} \leq Cmax
\]

\[
C= \Delta t \sum_{i=1}^{n} \frac{u_i} {\Delta x_i}  \leq Cmax
\]


*** courant number vs time step size
In *transient* simulation, for example, modeling *a wave motion with VOF model* or concentration front 
motion in a single phase flow stream with species transport model, in order to capture the time accurate 
mass motion, it is natural to *limit the move would not exceed more than one cell length in one time step*, 
for given time step size \Delta t.

- C :Courant Number

 \[ 
C=\Delta t / (\Delta x/U) \leq  1 \]
, typically C=0.25

time step size, \(\Delta t = C * \Delta x / U.\)

***  steady state simulation
if using *coupled* solver, it applies certain numerically *artificial time stepping* for 
relaxing the steady state solution process. 

The Courant number based on the artificial time step size \Delta t 
can be calculated with the same definition equation:  C=\Delta t / (\Delta x/U). The C number can take much larger 
value than 1. 
- For steady state simulation with coupled solver, the default Courant number is set as 200.

If goal is *accurate solution*, then Courant  needs to be *smaller than* 1.0.

If the goal is to get the steady state solution, you have two options, 
1. use \Delta t with C larger than 1
2.  steady state solver (usually more efficient)

*** transient simulation
For transient simulation, there is no general guideline how high the Cournant number value would be good for numerically 
stable calculation. 

When doing *time accurate transient calculation*, \( \Delta t \) is small, *SIMPLE* velocity pressure coupling is profered. 

If doing  *transient* with *Courant much larger than 1* *without requiring time accuracy* , you may need to use *Coupled* solver. 

Please do not use C >10 for better numerical stability for usual cases.

But we cannot exclude some special case C can be very large, such as there is no significant 
wave phenomena or the simulation has reached unchanged state. 

When *explicit* on define *multiphase panel* is selected,
then Courant number is  0.25 which is local Courant number based on sub time step
 that the solver determines automatically. 

The value printed out on screen 
is global Courant number value based on the time step size giving on calculation panel 
which is flow time step size. 

If you set global Courant number as C=0.25, the VOF tracking only needs 1 sub-time step, if 
C=1, 4 sub-time steps of VOF tracking will be implemented based on unchanged velocity field at the 
current flow time step.

On /solution control panel/, that Courant number is the /numerical artificial time stepping parameter/ for that 
time step which is not related with the physical flow time step size. 
Usually you want to keep it as high default 200.
*** Why is the Courant number specified for an implicit time marching scheme when the time step size is already an input?
The *implicit time marching* method is a /"dual" time formulation/ , 
which implies that the marching is done in *physical time* as well as in *"pseudo" time*. 

The "pseudo" time marching, also known as "inner iterations", is performed to advance the solution 
from one physical time to the next physical time.

The next *physical time* is given by the current physical time plus the user specified time step size.

The "pseudo" time step size used for these "inner iterations" are calculated using the Courant number based on the stability theory. 


The number of "inner iterations" performed depend on the "max. iterations per time step" parameter specified
 in the Solution > run calculation panel and the convergence criteria for residuals set in the monitors panel.

* Time step size 
- based on Courant number
- For turbo-machinery, less than 1 degree per time step
- The time step size required in LES calculations is governed by the time scale of the smallest resolved eddies.
*** courant number vs time step size
In *transient* simulation, for example, modeling *a wave motion with VOF model* or concentration front 
motion in a single phase flow stream with species transport model, in order to capture the time accurate 
mass motion, it is natural to *limit the move would not exceed more than one cell length in one time step*, 
for given time step size \Delta t.

- C :Courant Number

 \[ 
C=\Delta t / (\Delta x/U) \leq  1 \]
, typically C=0.25

time step size, \(\Delta t = C * \Delta x / U.\)

* Monitor
** Monitoring Residuals
refer to 29.15.1. Monitoring Residuals, user guide\\
single-precision computations, min residuals 1e-6  before hitting round-off.
Double-precision residuals, min residuals, 1e-12

- Globally scaled residual
- "localscaled" residual
- The scaled residual is a more appropriate indicator of convergence for most problems
*** write residuals to a text file on Windows OS
**** using scheme file
FLUENT 6: How to write the solution residuals to a text file

	Sometimes there is need to write the residuals to a separate text file. Normally, the residuals are printed in the FLUENT console and they are also written to the data file. However, in some situations, users want to write the residuals to a file at the end of each iteration.
	
	The following steps can be used to write the solution residuals to a text file.
	
	1. Read the case/data files in FLUENT.
	
	2. Read the Scheme file (init.scm) using the File-->Read-->Scheme command. The content of the Scheme file should be as follows (please copy the content between the dashed line into a text file and save it as 'init.scm'):
	
	--------------------------------------------------------------
	(define port)
	(set! port (open-output-file "residuals.dat"))
	
	(do
	((i 0 (+ i 1)))
	((= i (length (solver-residuals))))
	(format port "~a ~2t" (car (list-ref (solver-residuals) i)))
	)
	(newline port)
	---------------------------------------------------------------
	
	3. Set the following execute command at every iteration using Solve --> Execute Commands:
	
	file read-journal residual.jou
	
	The content of the journal file (residual.jou) should be as follows (please copy the content between the dashed line into a text file and save it as 'residual.jou'):
	
	---------------------------------------------------------------
	(do
	((i 0 (+ i 1)))
	((= i (length (solver-residuals))))
	(format port "~a ~2t" (cdr (list-ref (solver-residuals) i)))
	)
	(newline port)
	---------------------------------------------------------------
	
	4. Now compute the solution using the Solve->Iterate command. This will write out a text file ('residuals.dat') containing the solution residual history.
	
	From <http://www.eureka.im/1087.html> 
	

1. create a scheme file, residual-outputfile.scm
>>>>>>>>
; residual-outputfile.scm
(display "Save the residual in a file") (newline)
(let ((writefile (lambda (p) 
(define np (length (residual-history "iteration"))) 
 (let loop ((i 0))
   (if (not (= i np))
     (begin  (define j (+ i 1))
         (display (list-ref (residual-history "iteration")  (- np j)) p) (display " " p)
         (display (list-ref (residual-history "continuity") (- np j)) p) (display " " p)
         (display (list-ref (residual-history "x-velocity") (- np j)) p) (display " " p)
         (display (list-ref (residual-history "y-velocity") (- np j)) p) (display " " p)       
         (display (list-ref (residual-history "z-velocity") (- np j)) p) (display " " p)
         (display (list-ref (residual-history "k")          (- np j)) p) (display " " p)
         (display (list-ref (residual-history "epsilon")    (- np j)) p)         
         (newline p)
         (loop (+ i 1))
      )
     )
  )
  
  )  )

 (output-port (open-output-file "output.dat"))) 
 (writefile output-port)
 (close-output-port output-port))

>>>>>>>>>>
2. To put the following code in a ~journal.jou~ file
>>>>>>>
/file/rcd "sample.cas.gz"
/solve/it 25
/file/read-ma "residual-outputfile.scm"
exit yes
++++++
**** journal file

*** How do I get access to the residual values for each cell in my flow domain?
These values can be activated by the following TUI command:

/solve/set/expert

One option listed here is:
"Save cell residuals for post-processing? [no]"
This option has to be set to "yes" or "y".

Afterwards you have to do one dummy iteration so that the specific data fields are created.

Now the residuals of all solved equations can be accessed and postprocessed within Fluent, see Screenshot1.
They can also be used for convergence monitors.

If you want to store the residuals in your data file, you have to adjust the data file quantities (File > Data File Quantities) see Screenshot2.
*** save residual on cluster/linux OS
In linux, the journal file can't read scheme file, embed the scheme code directly in the journal file
>>>>>>>
/file/rcd "sample.cas.gz"
/solve/it 25
(display "Save the residual in a file") (newline)
(let ((writefile (lambda (p) 
(define np (length (residual-history "iteration"))) 
 (let loop ((i 0))
   (if (not (= i np))
     (begin  (define j (+ i 1))
         (display (list-ref (residual-history "iteration")  (- np j)) p) (display " " p)
         (display (list-ref (residual-history "continuity") (- np j)) p) (display " " p)
         (display (list-ref (residual-history "x-velocity") (- np j)) p) (display " " p)
         (display (list-ref (residual-history "y-velocity") (- np j)) p) (display " " p)       
         (display (list-ref (residual-history "z-velocity") (- np j)) p) (display " " p)
         (display (list-ref (residual-history "k")          (- np j)) p) (display " " p)
         (display (list-ref (residual-history "epsilon")    (- np j)) p)         
         (newline p)
         (loop (+ i 1))
      )
     )
  )
  
  )  )

 (output-port (open-output-file "output.dat"))) 
 (writefile output-port)
 (close-output-port output-port))


exit yes
++++++
** monitor drag

set-drag-monitor in TUI
Set the parameters for a new or existing drag coefficient monitor, including the list of wall zones
		on which to compute the coefficient, whether to print, plot, and/or write the data, the name of
		the output file (if appropriate), the plot window, and the force vector associated with the coefficient
		TUI
		> solve/monitors/force/set-drag-monitor
		monitor name [cd-1] 
		monitor drag coefficient? [yes] yes
		()
		zone id/name(1) [()] 11
		zone id/name(2) [()] 10
		zone id/name(3) [()] 16
		zone id/name(4) [()] 
		print data ? [no] 
		write data? [yes] yes
		drag coeff. data file name? ["cd-1-history"] 
		plot data? [no] 
		plot per zone ? [no] 
		x-component of drag vector [0] 
		y-component of drag vector [0] 
		z-component of drag vector [1] 


*** Compute Local Scale
When *Compute Local Scale* is enabled, ANSYS Fluent computes and stores both the
locally and globally scaled residuals from subsequent iterations, for the purpose of reporting.
The scaled residuals are stored in the data file.

In the local scaling each cell is scaled locally by the diagonal coefficient
 and all the cells have a similar scaled contribution to the overall residual. 

The local scaling shows a consistent reduction in the residuals and shows less dependence on the mesh size; 
solver settings and/or initial flow field and therefore represents an improved manner of viewing the fall in the residuals.
*** Definition of Residuals for the Pressure-Based Solver
- “unscaled” residual, \( R^{\Phi} \) 
Eq. 29.5, user guide, fluent

** Save images during calculation
refer to tutorial named ~floating object~ file:C:\akmkemin\Backup\ANSYS\Tutorial\Free Surface\Floating_Objects_17.0\Fluent_Floating_Objects_17.0\AFW.pdf
*** journal file for saving images on batch model
- image setup: Settings, executed only once after loading the case
- image saving: Saving of images, executed in a fixed interval for a smooth animation
*** ~image setup~ code

• Lines 7 to 8: Settings for mesh display
• Lines 9 to 11: Settings for
lights/shadows
• Lines 12 to 16: Settings for the saved
images
• Lines 17 to 24: General settings for
window layout
• Line 25: Coloring of the faces
#+BEGIN_SRC
display set contours clip-to-range? no
display set contours filled-contours? yes
display set contours global-range? no
display set contours n-contour 100
display set contours node-values? yes
display set contours render-mesh? yes
# Lines 1 to 6: Settings for contour plots
display set filled-mesh? yes
display set render-mesh? yes
display set lights lights-on? yes
display set lights headlight-on? yes
display set lights lighting-interpolation gouraud
display set picture color-mode color
display set picture driver png
display set picture invert-background? yes
display set picture x-resolution 1920
display set picture y-resolution 1080
display set windows scale format "%0.1f"
display set windows scale alignment left
display set windows scale clear? yes
display set windows scale border? yes
display set windows text visible? yes
display set windows text date? no
display set windows logo? no
display set windows axes visible? no
display set colors color-by-type? no
#+END_SRC
*** Image saving
Line 1: Specify window for output
• Lines 2 to 3: Set surfaces to show
• Lines 4 to 5: Settings that change during the
execution of the journal
• Lines 6 to 8: Show and save a contour plot
• Line 9: Copy lines 7 and 8 for different
views
• Lines 10 to 16: Show the mesh, adjust some
display settings and save the image
• Line 17: Close the window opened in line 1

display set-window 5
;display contour of " _vof" surface 

display set contours surfaces _vof (
;Set surface IDs to be drawn as meshes. You can include a wildcard (*) within the surface names.
display set mesh-surfaces wall_sdof ()
display views camera projection perspective
display set titles left-top "Free surface level View 1, top front"
;display contour plot, mixture, y coordinate varies between -1 and 1
display contour mixture y-coordinate -1 1
display views restore-view vof-0
display save-picture ./z_vof-0-%7t.png y
display set titles left-top "Free surface level View 2, top front close"
display contour mixture y-coordinate -1 1
display views restore-view vof-1
display save-picture ./z_vof-1-%7t.png y
display set titles left-top "Free surface level View 3, top back"
display contour mixture y-coordinate -1 1
display views restore-view vof-2
display save-picture ./z_vof-2-%7t.png y
display set titles left-top "Free surface level View 4, top back"
display contour mixture y-coordinate -1 1
display views restore-view vof-3
display save-picture ./z_vof-3-%7t.png y
display set titles left-top "Free surface level View 5, bottom back"
display contour mixture y-coordinate -1 1
display views restore-view vof-4
display save-picture ./z_vof-4-%7t.png y
display set titles left-top "Free surface level View 6, bottom front close"
display contour mixture y-coordinate -1 1
display views restore-view vof-5
display save-picture ./z_vof-5-%7t.png y
display set titles left-top "Free surface level View 7, top front/side far"
display contour mixture y-coordinate -1 1
display views restore-view vof-6
display save-picture ./z_vof-6-%7t.png y
display views restore-view vof-7
display set titles left-top "Free surface level View 8, top front/side reversed"
display contour mixture y-coordinate -1 1
display save-picture ./z_vof-7-%7t.png y
display views restore-view vof-8
display save-picture ./z_vof-8-%7t.png y
display set titles left-top "Free surface level View 9, top frot/side reversed close"
display contour mixture y-coordinate -1 1
display set titles left-top "Mesh from side"
display surface-mesh wall_sdof _x=0 ()
display views restore-view mesh-x0
display views camera projection orthographic
display update-scene select-geometry yes _x=0 no no
display update-scene display yes no no yes yes yes yes yes no 83. 83. 83. 0.
display save-picture ./z_mesh-x0-%7t.png y
display views restore-view mesh-x1
display views camera projection orthographic
display save-picture ./z_mesh-x1-%7t.png y
display set titles left-top "Mesh from top view"
display surface-mesh wall_sdof _y=0 ()
display views restore-view mesh-y0
display views camera projection orthographic
display update-scene select-geometry yes _y=0 no no
display update-scene display yes no no yes yes yes yes yes no 83. 83. 83. 0.
display save-picture ./z_mesh-y0-%7t.png y
display views restore-view mesh-y1
display views camera projection orthographic
display save-picture ./z_mesh-y1-%7t.png y
display close-window 5

* Scheme
using  [[https://en.wikipedia.org/wiki/Scheme_(programming_language)][Scheme]] (programming language, sub of Lisp)
Chapter 2:Text User Interface (TUI), user guide, fluent

The menu system structure is similar to the directory tree structure of Linux operating systems.
q # move back one step
i.e. 
/display/set>q
/display>
Ctrl+c #interupt
! # (bang) shell escape character
If you are running ANSYS Fluent under a Windows operating system, all characters following the ! up
to the next newline character will be executed.

up or down arrow keys #Command Line History


** references:
Scheme programming 
[[http://ds26gte.github.io/tyscheme/index-Z-H-1.html#node_toc_start][
Teach Yourself Scheme in Fixnum Days]]
[[https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-4.html#%_toc_start][The Structure and Interpretation of Computer Programs]]

** Text Prompt System
Arguments in Commands: numbers, filenames, yes/no responses, character strings, and lists.
i.e.
filled-mesh? [no] Enter
shrink-factor [0.1] Enter
line-weight [0.2] Enter
title [""]Enter
*** filenames
Filenames are actually just *character strings*.
For convenience, filename prompts do not require the string to be surrounded with double quotes. 
If, for some exceptional reason, a filename contains an embedded space character, then the name must be surrounded with double quotes

*** Strings
Character strings are entered in double quotes, for example, ¡°red¡±. Plot titles and plot legend titles
are examples of character strings. Character strings can include any characters, including blank spaces
and punctuation
** Text Interface Help System
 ? followed by the command #To obtain a brief description of each of the commands by entering a
i.e.
>?dis
   display/: Enter the display menu.

* Accelerating
[[https://www.nvidia.com/content/tesla/pdf/ansys-fluent-nvidiagpu-userguide.pdf][Accelerating ANSYS Fluent 15.0 using NVIDIA GPUS]]
* Solver and memory requirements and number of cores
2046602

* Initialization

- initialize the *entire flow field* ( in all cells)
  + Standard initialization
      29.9.1. Initializing the Entire Flow Field Using Standard Initialization
  + FMG initialization
     rotating machinery, flows in expanding or spiral ducts
  + Hybrid initialization

- patch values or functions for selected 
flow variables in selected cell zones or 
"registers" of cells.

** Standard initialization

** Hybrid initialization
- velocity and pressure are obtained by solving Laplace's equation 
- other variables are based on domain average values 

* Convergence
*Continuity equation* convergence trouble affects convergence of all equations.

** improve solver robustness on poor quality mesh
~#2040259~
*** examples of poor quality mesh 
- surface wrapped geometry
- cut cell mesher
- complex geometry containing warped or very high aspect ratio prism elements
***  using Fluent
- check mesh verbosity to get detail about 

what problems are occurring in the mesh using TUI
~mesh/check-verbosity 2~

- *Degenerate contact points* can be flagged here:
  + They can cause accuracy issues when using *node-based* gradients
  + *Least Square cell-based* gradients are recommended when degenerate contact points are present
  + Coordinates of problem areas can be printed in by the TUI command: 
~print-contact-points~

- When ~check-verbosity~ is switched to 2, there are new options for mesh metrics to post process:
    + *edge length ratio* and expansion ratio where values close to zero are "bad" and 1 woud be a uniform mesh

- improvements to the mesh quality can be made by utilizing the TUI commands:
   ~/mesh/repair-improve/improve-quality~
   ~/mesh/smooth "quality based"~
  + the second command allows a user to specify % if worst cells to smooth
  + these methods have similar quality improvement as "auto-node-move" in Fluent meshing, but with the benefit of parallel speed
  + multiple calls to these functions can often be worthwhile to achieve optimal mesh quality
  + by default, boundary nodes are fixed. the TUI command ban be used to allow boundary node movement and 
     give more flexibility to the algoritm
     ~/mesh/repair-improve/allow-repair-at-boundaries yes~
  + Check the surface mesh after running command to confirm it did not introduce unwanted distortions
- meshes can have other problems
  + negative volumes (inverted cells)
  + left handed cells
     + more commonly found in cut-cell meshes of complex geometries
- Fluent TUI can be used to repair these problems
   ~/mesh/repair-improve/repair~
- By default the repair does not move bounary nodes to preserve the boundary topology

*** using Fluent Meshing

**** node move
- auto node move
- semo ato correction
- negative cell volume correction

**** silver removal from tet meshes

**** manual cell modification
- smoothing nodes
- splitting cells
- moving nodes
- swapping cells
**** additional TUI commmands for improving tets and prisms
~/mesh/check-verbosity 2~
** Fast convergence
1. smaller mesh size
2. reorder the mesh
   To reorder the domain, select Domain.
Setting Up Domain → Mesh → Reorder → Domain
To reorder the zones, select Zones.
Setting Up Domain → Mesh → Reorder → Zones

3. inviscid, then, viscous turbulence model
4. low rotational speed for wind/tidal turbine
5. interpolate data
6. hybrid initialization
7.  an initial solution with the *standard k-e model* before switching to a more advanced turbulence model.


** checklists
- Residuals
- net  mass rate
- force/drag/moment (coefficents)
** residuals
*** high residuals for Reynolds stresses 
~#2009415~
This often happens in *swirling flows* when an unstable low pressure core forms.
The solution is to change the model to transient and run it until an averaged picture of the flow domain is established.

To improve the steady convergence 
- using *coupled* pressure velocity coupling 
- reducing the Courant number to a low value.

** Reverse flow :reversed_flow:

It is common to encounter the regions of reversed flow 
at the initial stages of the simulation – This is normal. 

However, if the “reversed flow” warnings do not disappear as the simulation progresses, 
then one needs to address the issue and move the outlet boundaries to a location
 where the inflow is no longer encountered. 

Normally, it has to do with the outlet boundary condition.

if you were to use the "pressure outlet" boundary condition at the outlet, 
your outlet must be set far away from the object of interest. 

In Fluent, I normally use the " outflow" boundary condition at the outlet 
and it does not give me reverse flow.

*** reasons
It is virtually impossible to prescribe correct values for varying turbulence characteristics, 
temperature and species concentrations in those cells where the backflow occurs. 
-  The number of such “backflow” cells might vary from one iteration to another, 
and any discontinuity in calculated turbulence, species and temperature values
 for the neighbouring “outflow” and “inflow” cells is very likely to have an adverse effect on convergence. 
- The accuracy of the solution can also be affected, especially if the area of interest is located close to the outlet with the “backflow”. 
file:figures/reversed_flow.png
*** Solutions
> if vortex formation/recirculation of flow near an outlet boundary,[[increase the downstream length]]

> check the mesh quality, improve it.

> use higher order scheme

> At last reduce the relaxation factor if necessary. 

<<increase the downstream length>>
- At preprocessor (mesh generation) – too costly and inconvenient. 
- Directly in ANSYS Fluent by [[Outlet BC Extrusion][extruding the outlet boundaries]]. 

Calculation steps:
- Set up the model and calculate a solution on the initial mesh
- Please write the interpolation file first. 
- Close the existing Fluent session. 
- Open a new Fluent session and read the case file only. 
- Perform [[Outlet BC Extrusion]]
- Check the new zones and ensure that the prescribed outlet boundary conditions are set and named consistently. 
- Initialise the flow. 
- Read in the interpolation file. 
- Continue simulation.

<<Outlet BC Extrusion>>
- The original data file cannot be read onto the new mesh. 
- The new case file need to be initialised. 
- Old data can still be recycled and used again by interpolation:


#+BEGIN_SRC 
 file interpolate read-data original_ip_file_name.ip

Mesh/modify-zones/extrude-face-zone-delta 
#specify the face zone id/name i.e. inlet boundary name or zone ID 
distance delta 1 0.2[1]
#first extrusion layer edge length
distance delta 2 0.25 
distance delta 3 0.3 
distance delta 4 
#press “Enter” once a sufficient outlet section has been built[2]***. 
#+END_SRC 
[1] − The offset value does not need to be 0.2 and should be equal to the typical cell edge length close to the original outlet 
[2] – total extrude layers, 3 cells. To minimise the amount of cells an expansion ratio of 1.2 can be used
**** Reference
•	5.9.8. Extruding Face Zones, user guide
•	File “prevent backflow at outlet.fss”
**** Note:

- This text command is not available in the parallel version of ANSYS Fluent.
extrusion is not possible from boundary face zones that have hanging nodes.
-  Extruding face zones is not allowed on polygonal face zones.
- Extruding face zones is only allowed in the 3D version of ANSYS Fluent.

**** outlet Extrusion  error
Problem description:
- mesh/modify-zones/extrude-face-zone-delta
- Face zone id/name [] 27 #outlet face zone

- Distance delta(1) [()] 0.1
- Distance delta(2) [()] 
- Extrude face zone? [yes] 
- Warning: the base thread has multiple adjacent threads!
- Please separate the extruded side threads manually, and set the boundary condition accordingly.
- Error: received a fatal signal (Segmentation fault).

** Convergence criterion
There are no universal metrics for judging convergence. Residual definitions that are useful for one class of problem are sometimes misleading for other classes of problems. Therefore it is a good idea to judge convergence not only by examining residual levels, but also by monitoring relevant integrated quantities and checking for mass and energy balances.
There are three indicators that convergence has been reached:

• The residuals have decreased to a sufficient degree. The solution has converged when the Convergence Criterion for each variable has been reached. The default criterion is that each residual will be reduced to a
value of less than 1e-3, except the energy residual, for which the default criterion is 1e-6.

• The solution no longer changes with more iterations.
Sometimes the residuals may not fall below the convergence criterion set in the
may show that the residuals have stagnated and do not change with further iterations.
This could also be considered as convergence.

• The overall mass, momentum, energy, and scalar balances are obtained.
You can examine the overall mass, momentum, energy and scalar balances in the
Flux Reports dialog box. The net imbalance should be less than 0.2% of the net
flux through the domain when the solution has converged. In the next step you
will check to see if the mass balance indicates convergence.

** judging convergence
- no universal metrics for judging convergence.
- lift/drag/thrust/power coefficient 
Are physical models appropriate?
Is flow turbulent?
Is flow unsteady?
Are there compressibility effects?
Are there 3D effects?
Are boundary conditions correct?
Is the computational domain large enough?
Are boundary conditions appropriate?
Are boundary values reasonable?
 Is the mesh adequate?
Can the mesh be adapted to improve results?
Does the solution change significantly with adaption, or is the solution mesh independent?
Does boundary resolution need to be improved?


*** residual
Residual definitions that are useful for one class of problem are sometimes misleading for other classes of problems.
- the normalized unscaled residuals drop to 1e-3

*** drag
*** flux

**  Reynolds-Stress Models convergence

** reasons for numerical instabilities
- ill-posed problem
-  poor-quality mesh 
-  inappropriate solver settings
** convergence troubleshooting
- Ensure that the problem is well-posed
- Compute an initial solution using a first-order discretization scheme
- For the pressure-based solver, decrease underrelaxation factors for equations having convergence problems
- For the density-based solver, reduce the Courant number
- Remesh or refine cells which have large *aspect ratio* or large *skewness*.
** Accelerating Convergence and reduce solution time
- enable *Pseudo-Transient*
- For *faster convergence*, it might be useful to obtain an initial solution with the standard k-e model 
before switching to a more advanced turbulence model.
- Supplying better initial conditions
  + Starting from a previous solution (using file/interpolation when necessary)
- Gradually increasing under-relaxation factors or Courant number
  + Excessively high values can lead to solution instability and convergence problems
  + You should always save case and data files before continuing iterations
- Starting with a good quality mesh with appropriate mesh resolution
  + The *min orthogonal quality* is 0.01 and an average value that is much higher (reported in Mesh > Info > Quality)
*** pressure-based solver
- the default explicit under-relaxation factors ( u r F s ) for pressure and velocity of 0.75 are generally robust values, 
but they should be reduced for skewed meshes, when oscillatory convergence is experienced, 
or when higher-order discretization is employed to about 0.4 to 0.5.
*** Initialization Methods
Full multigrid initialization (Fmg)
the overall initialization time using this approach is much longer than that using standard initialization by zone, but it allows a much quicker solve
- provides the best-guess initial solution. 
- particularly suited to turbomachinery, external and compressible flow problems
~Solve>initialize>set-fmg-initialization~
~Solve>initialize>fmg-i~
** convergence and stability
*** The warped-face gradient correction
The warped-face gradient correction (WFGC) is designed to improve gradient accuracy for all gradient
methods
WFGC is recommended for 3D simulations on *polyhedral*, *hexahedral*, and hybrid meshes (meshes containing a mix of hexahedral and
polyhedral cells)

** Convergence vs Accuracy
- converged solution \neq accurate solution
A converged solution is not necessarily an accurate solution
*** Accuracy depends on :
- Order of the discretization schemes (2nd order schemes are recommended)
- Mesh resolution
- Boundary Conditions
- Model limitations
- Geometry simplifications
- Precision of the solver (2d/3d or 2ddp/3ddp)

** pressure interpolation accuracy
~2042380~2
for  a uniform mesh, 2nd order accurate 
for  a non-uniform mesh, the most deviation from 2nd order will be in the
linear scheme

** finding regions of poor local convergence
~2040257~
Key words: Improving Convergence, Divergence Detection, ICS, Local Cell Residuals

This document explains:
- identifying local problematic regions
-  how to make *local cell residuals* available for post-processing
-  how to use the *adaption registers* for visualizing problematic regions
- gain some insight about causes of poor convergence
*** saving local residuals for post-processing
To save the loccal residuals using a TUI command:
~solve/set/expert/check-verbosity 2~


*** using Scheme file 
- automatically creates custom field functions for the absolute values of local cell residuals
- applicable to all RANS models
- creates only thoese CFFs that are relevant to the solved equations
- Scheme excludes species and volume fractions residuals

** reference
refer to 15.10. Monitoring and Obtaining convergence, [[C:\akmkemin\Backup\ANSYS Tutorial\CFX\CFX-Solver Modeling Guide.pdf][CFX-Solver Modeling Guide]]

* Divergence



** Divergence detected in AMG solver: pressure correction
This error message is an indication that the “pressure correction” equation is diverging. 

- Reason 1: the under-relaxation factor (URF) for that equation is too large. 
- Reduce the URF by 10% and repeat the calculation.
- Try turning on “AMG verbosity” from the Multigrid Controls panel. 

Try a setting of verbosity=1. This will display *AMG residuals* for each equation during the iteration. 

During the iteration, you will see the *residuals* of the multigrid sub-iterations. 
The default number of sub-iterations is 30. It normally takes under 10 sub-iterations for equations to converge to the default tolerance.
 However, if a particular equation does not converge, it will “cycle-out,” requiring all 30 iterations, before giving up. 
This will consume a lot of CPU time and is an indication that the solution is nearly divergent.

 If this happens, try reducing the URF for that equation, also by 10%. 
If the sub-iterations diverge, you will get the error message.

- Reason 2: low  mesh quality. 
Mathematically, skewed cells induce source terms, which cause the equations to become unstable. 
You may not be able to resolve this problem without remeshing the domain. 

As a general rule
 minimum orthogonal > 0.01 
 the maximum skewness <  0.93-0.95. 

Especially important is that you should have low skewness in regions where gradients are large.
 It is in these regions that errors multiply.

- Reason 3: incorrectly defined boundary conditions. 
If the grid quality is believed to be good enough and reducing the under-relaxation factors does not work, 
it is recommended to review all boundary conditions for consistency and correct inputs.

** Error: Divergence detected in AMG solver: k

A:Since you were working on convergence issue from past couple of days I would like help you beyond the scope of academic support. Please read the support related guidelines mentioned at the end of email. 
I am attaching the case and data file which should run without any issue. 
1) I have changed the solver setting a bit. Using SIMPLEC algorithm. 
2) Hybrid initialization is used. 

Please let me know if you have further questions. 
Please take the time to review the scope of academic support. This information will help you understand what type of assistance to expect. 

The time step size set in case file it too large for this kind of unsteady simulation. We need to use small time step size so that the time step should be no larger than the time it takes for a moving cell to advance past a stationary point at interface regions. A dt =1e-4 s should be good in our case.
please refer manual
1) requirement and limitation of sliding mesh : help/flu_ug/flu_ug_sec_slide_grid_req.html
2) Solution stratergies of sliding mesh : help/flu_ug/flu_ug_sec_slide_solve.html

Fluent can handle larger aspect ratio. For some external aerodynamics case even 50000 will work . I think 200 should be alright for this simulation and we can proceed with it.

* Results
- set reference value before calcualte y plus, coefficients etc
For definition of values , refer to *Chapter 34: Field Function Definitions*
** wall y plus
Wall Yplus, Alphabetical Listing of Field Variables and Their Definitions, user guide

-setup Reference value

*** How is y plus calculated in Fluent?
For turbulent flow >> 4.16. Near-Wall Treatments for Wall-Bounded Turbulent Flows, theory guide
\tau_w >> u_{\tau} >>y+
wall shear stress >> friction velocity >> y plus
u_{\tau} = sqrt(\tau_w /\rho)
y^+ = \rho u_{\tau} \delta y /\mu
- \delta y : half of first cell height

*** How to *Estimate* the first cell height (y) for the mesh from the desired value of y plus (y+)?
#2040008 
*Known Parameters*:
 density (rho), kinetic viscosity (mu), free stream velocity (U), characteristic length scale (L), and the desired y plus (y+).

Find: the first cell height (y).

The Reynolds number is Re = \rho * U * L / \mu.

The *skin friction coefficient*,C_f, can be calculated from Re. 
  flow on a plate, we have the following formula: Cf = 0.058*Re^(-0.2). 
  internal flows, we have: C_f = 0.079*Re^(-0.25), in which Re is based on pipe diameter.

Use C_f to predict the wall shear stress (\tau_w): \tau_w = 0.5*C_f * \rho*U.^2

From \tau_w compute the friction velocity U_\tau 
 U_\tau  = sqrt(\tau_w/\rho) .

Then, the first cell height can be calculated as: \delta y = y+ \mu / (U_{\tau}  \rho).

y plus calculator :https://www.computationalfluiddynamics.com.au/tips-tricks-cfd-estimate-first-cell-height/

*** y plus vs turbulence model
For K- \omega model, To resolve the boundary layer, 
the near-wall distance should reflect y+<2 /with 15  elements in the boundary layer/.
 
Sufficient mesh resolution should be provided downstream of
 the blades and near the blade tip to resolve features of interest
 such as tip vortices. 
Around the blades, the mesh element type is typically hexahedral with element faces aligned with the flow.
** prism layer vs boundary layer thickness
- Goal: prism layer is thicker than boundary layer
- rule of thumb: 15 and more nodes in the boundary layer

*** How to display y plus?

**** Software: Cfd post
1. Insert a plane, 
Show mesh,
Render tab/Show mesh lines
2. Contour
Variable, eddy viscosity ratio
****  Fluent
display> ploy> xy plot> turbulence>  wall y plus
contour of a plane
create a plane cutting the station of the blade
contour of turbulence, turbulent viscosity ratio
   enable filled and draw mesh
file:C:\Users\exw692\Dropbox\Emacs\figures\fluent\contour_of_turbulent_viscosity_ratio_and_mesh.png
file:C:\Users\exw692\Dropbox\Emacs\figures\fluent\eddy_viscosity_vs_5_prism_layers_e387.png

** residuals
- the normalized unscaled residuals drop to 1e-3
** moment
moment calculation in ANSYS fluent
#+CAPTION: Moment calculation
#+NAME: moment
file:C:\Users\exw692\Dropbox\Emacs\figures\moment-ansys.bmp
- you need to specify moment centre and axis
\[
C_m = \frac{M}{0.5 \rho v^2 AL}
\]
- \rho, density
-$v$, velocity
-A, rotor area
-L, rotor diameter

- for *turbine* (wind/tidal), torque direction is the same as free stream velocity, while moment direction is the opposite of free stream velocity.
If you selected Moments, the pressure moments, viscous moments (if appropriate), 
total moments, pressure coefficient, viscous coefficient and total coefficients for 
the *wall zones* about the specified center will be displayed or saved. 
Additionally, the moments and coefficients in the direction of the specified axis will be displayed or saved. 
The report will include the values for the individual wall zones, as well as the net values for all of the wall zones combined.

See *Computing Forces, Moments, and the Center of Pressure* in the *Theory Guide* for details about computing forces and moments.
** drag
for drag on cylinder, the reference area is the project area on the section normal to streamwise direction.
A=height*Diameter

** wall shear stress
- unit: pressure (force/area)
- tangential force per unit area 


*** shear stress calculation 
For laminar flow

shear stress depends on the normal velocity gradient at the wall
\tau = \mu \partial u/ \partial n
https://www.sharcnet.ca/Software/Fluent6/html/ug/node255.htm

For turbulent flow, refer to Near-Wall Treatments for Wall-Bounded Turbulent Flows in the Theory Guide

*6.3.14.10. Shear-Stress Calculation Procedure at Wall Boundaries* user guide

** skin friction coefficient
process: shear stress >> Cf
[
C_f = 2\tau_w / (\rho v^2)
]

** Why are my results inaccurate? 

*** Is the simulation correctly set up?
Does your model include all relevant physics?
Has your solution converged to a reasonable value (see above)? 
For a simple analysis, an RMS residual of 1E-5 should be sufficient. 
Keep lowering your residual value until the solution 
no longer converges monotonically.

*** sensitivity analysis
Perform a sensitivity analysis on the relevant features of your simulation. 
In its simplest form, a sensitivity analysis involves altering one parameter (e.g., grid refinement) while keeping the other parameters constant and observing the effect this parameter has upon the simulation accuracy (e.g., by monitoring skin friction). The purpose of a sensitivity analysis is to obtain a simulation that is both accurate and cost effective. For just about every simulation a sensitivity analysis on mesh size and convergence tolerance is required. Depending on what you are modelling other sensitivity analyses may be required, covering things such as: 
Domain size (how close can the boundaries be to the region of interest?)
- Grid density
- Grid quality
- Grid type (e.g., structured versus unstructured),
- Spatial discretization (or advection) scheme
- Temporal discretisation scheme
- Turbulence model,
- Turbulence numerics,
- Turbulence intensity,
- Boundary condition type,
- Any empirical models used, such as heat/mass transfer coefficients, drag laws, free surface model,
- Two- versus three-dimensional simulations,
- mestep size.

*** Error analysis:
1. Calculate your discretization errors. 
A calculation should be performed on each quantitative parameter
 of interest (e.g., lift). The Journal of Fluids Engineering provides
 an explanation of predicting discretization errors here:
 Calculating Discretization Errors. In terms of errors,
 discretization errors are the greatest concern to a CFD modeler. 
Discretization errors are those that occur as a result of
 modeling the governing flow equations as algebraic expressions
 in a discrete space-time domain.
 Discretization errors should approach zero
 as the grid is resolved (i.e., as more grid points are 
generated and the solution becomes grid-independent).
 However, discretization errors also depend on grid quality
 (e.g., aspect ratio, orthogonality, skew). 
A well-refined grid is not necessarily a high quality grid and,
 thus, grid resolution and quality sensitivity analyses are recommended.

2. Physical approximation errors can cause significant accuracy issues. This type of error is caused by physically approximating something to simplify the simulation (e.g., modeling a real fluid as an ideal gas).
3. Computer round-off errors are caused when a computer stores floating point data. Depending on the accuracy your computer stores the data at, some round-off may occur. This type of error is usually negligible compared to the others and can be easily decreased by running the simulation in Double Precision mode.
4. Iterative convergence errors are due to the resolution of the RANS equations. Since the Navier-Stokes equations are not solved directly, the solution iterates until a specified convergence criterion is reached (e.g., a residual value of a certain size is reached). This type of error can be decreased by allowing convergence to an acceptable level (see above).
5. Usage errors are caused by user specifications. For example, the user may run a turbulent simulation as laminar or an unsteady simulation as steady. These errors can be monitored via a convergence study.
4. And finally - consider the results are you comparing against. Are they accurate? How do you know? Are you modelling EXACTLY the same conditions as the results you are comparing against?

* Re-do
** write and save BC setups in fluent

file/write-bc bc_setup

file/read-bc bc_setup



* Post
file:post.org
* Data Interpolation  :interpolation: :write bc:
** Interpolate BC and data
1.) Run the simulation for coarse mesh
2.) Write interpolate file using command file-->interpolate-->write-->save (selected all variables)
3.) Write boundary conditions using TUI: ~file/ write-bc (name of file)~
4.) Read fine mesh using command file-->read-->mesh
5.) Read boundary conditions using text command “file/read-bc” (read same file generated at step 3) ( the file shoud be the loading path, you can 
check the loading path with ~pwd~ command
6.) Read interpolate file using command file-->interpolate-->read-->selected same file generated at step 2
7) Reduce the under-relaxation factors and calculate on the new mesh for a few iterations to avoid sudden changes due to any imbalance of fluxes after interpolation. Then increase the under-relaxation factors and compute a solution on the new mesh.
** Replacing the mesh
>zones/setting up domain/replace mesh
> https://www.sharcnet.ca/Software/Ansys/17.2/en-us/help/flu_ug/flu_ug_replace_mesh.html
- no need to save case setting and interpolate the existing data, these are done automatically
- replace the mesh globally

* Reference Values
> 33.12. Reference Values, user guide,17.2

For *non-dimensional coefficient* and *derived physical quantites*, you need
to set reference values

e.g. force/moment coefficients
Force coefficients use the reference *area*, density, and velocity. In addition, the pressure force calculation
uses the reference pressure.
• Moment coefficients use the reference length, area, density and velocity. In addition, the pressure force
calculation uses the reference pressure.

- *Reynolds number* uses the reference *length*, *density* and *viscosity*

 *Pressure and total pressure coefficients* use the reference pressure, density, and velocity.
 Entropy uses the reference density, pressure, and temperature.
 *Skin friction coefficient* uses the *reference density* and *velocity*.
 Heat transfer coefficient uses the reference temperature.
\[
C_f = \tau _w /(0.5 \rho_ref  v_{ref}^2
\]
where \tau_w is the wall shear stress

• *Turbomachinery efficiency* calculations use the ratio of specific heats.


* Grid/mesh independence  :GCI:
keywords: Richardson's extrapolation, Grid convergence index
a summary of Richardson's extrapolation is [[https://www.grc.nasa.gov/www/wind/valid/tutorial/bibliog.html#Roach94][here]]
- r: grid refinement ratio  
   
- h: grid spacing

** Grid refinement ratio
 for hexa mesh 
r=h_2 / h_1
For unstructured mesh use effective grid refinement ratio



** Exaple
Example of Grid convergence for wing:
file:C:\akmkemin\Backup\academic\Notes\ANSYS\mesh\Modules\wings\wing-mesh-comparing-pointwise.doc

** hexa mesh
double nodes along each coordinates (x, y,z)

* Mesh adaption
- cell skewness can't be improved by using mesh adaption

30.1. Using Adaption
30.2. Boundary Adaption
30.3. Gradient Adaption
30.4. Dynamic Gradient Adaption
30.5. Isovalue Adaption
30.6. Region Adaption
30.7.Volume Adaption
30.8.Yplus/Ystar Adaption
30.9. Anisotropic Adaption
30.10. Geometry-Based Adaption
30.11. Registers
30.12. Mesh Adaption Controls
30.13. Improving the Mesh by Smoothing and Swapping

** Anisotropic adaption of Inflation / Boundary Layers using Fluent
Problem/Description: After solving a CFD analysis you can find that the boundary layer mesh on the walls is 
insufficiently refined to give you the required y-plus value.

Solution: Fluent has the ability to use anisotropic adaption to /split the inflation layer/ (Prism or Hexahedral)
 in line with the wall boundary by a given ratio to increase the number of layers and reduce the y-plus of the model.

How to?
To Use Anisotropic adaption
Setting Up Domain → Adapt → Mark/Adapt Cells → Anisotropic
The procedure for performing anisotropic adaption is as follows:
 1. In the Anisotropic Adaption Dialog Box, select Cell Distance or Register from the Cell Options group box. 
These options allow you to control the marking of boundary layer cells by either selecting the Cell Distance and enter
 the Number of Cells to be marked and adapted using the distance from the boundary zone or selecting Register to adapt cells using
 an existing Register. 
2. The Splitting Options control how the splitting ratio is computed. It is defined as: Splitting Ratio= Height of the splitting point to the base faceOriginal height of the cell By default, Automatic is selected, resulting in the ratio being computed automatically from the mesh. If you selected Manual, enter the desired Split Ratio. If you choose to compute the split ratio automatically, the split ratio of the first layer is computed, and it may be 0.5 if the original cells are uniformly distributed, resulting in the height of the first layer being the same as the height of the second layer. Important: Note that the Split Ratio that you enter is only applicable to the first layer, and all the other layers are split with a ratio of 0.5. 3. For the Cell Distance option, one or more boundary face zones must be selected before marking the cells for refinement. 4. For the Register option, select a register in the list. Note that one or more boundary face zones must be selected before doing the refinement. 5. Click Refine to refine the marked cells.
Limitations:

only available in 3D 
 It only works for hexahedral cells or prism cells 
 Each cell can only be split into two, with a given splitting ratio in the normal direction of the boundary face.
 Multiple layers can be achieved by multiple refinement 
 Each cell to be split can only be reached once from any of the boundary face
 otherwise, the refinement will not be processed

 Unlike other adaption functionalities, the subdivided cells cannot be coarsened again, because all the cells that are adjacent 
to the refined cells are converted into polyhedral cells



> 2042750_Fluent_anisotropic_adaption.pdf
** Reference
 30.12. Mesh Adaption Controls



* Verification and validation
** assess the results of a simulation if no experimental or theoretical data  to compare to

This question touches on the difference between verification and validation. 

- Verification answers the question, "Am I solving the equations correctly?" 
- Validation answers the question, "Am I solving the correct equations?"  

Without any experimental or theoretical data, there really isn't much to inform whether or not your result is 
reasonable with respect to reality (i.e., you cannot validate your results). 
But you can still verify your results. (Note that verification studies are done by development before releasing ANSYS software. So the 
code is already verified - save for any bugs, that are always inevitable.)  

-The way to assess results depends on the goal of the study. Here are some suggestions on how one 
might move forward in the absence of data to compare with. 

- Do a mesh sensitivity study. Compare results with subsequently finer meshes, until you observe 
that the result is no longer changing with refinement (at least not significantly). Then you know 
that this is the "exact solution" to the discrete version of the equations solved, subject to your 
boundary conditions.  

- Once a reliable level of mesh resolution is chosen, compare the different models you test on that 
mesh, with respect to one another. See how sensitive your results are to things like turbulence 
model chosen, wall-adjacent cell size, spatial and/or temporal order of accuracy, etc.  
- Look in the literature for any studies that include a similar geometry and/or configuration. See 
what quantities they measure, and see if your results are within the ballpark.

* UDF
refer to file:UDF.org
* Parallel
27 Parallel-Processing.pdf
** Max core for fast speed running?
** Checking Parallel Performance
Parallel Processing in the User's Guide.
> Parallel/ Timer/ Usage

method: 
running the same parallel problem on *1 CPU*
and on *n CPUs*, and comparing the Total wall-clock time (elapsed time for the iterations) in both cases

Ideally you would want to have the Total wall-clock time with n CPUs be ~1/n~
times the Total wall-clock time 
with 1 CPU.

 In practice, this improvement will be reduced by the performance of the communication subsystem
of your hardware, and the overhead of the parallel process itself.


e.g.

++++++++
Performance Timer for 33 iterations on 2 compute nodes
Average wall-clock time per iteration: 0.157 sec
Global reductions per iteration: 51 ops
Global reductions time per iteration: 0.000 sec (0.0)
Message count per iteration: 400 messages
Data transfer per iteration: 0.301 MB
LE solves per iteration: 4 solves
LE wall-clock time per iteration: 0.074 sec (47.2)
LE global solves per iteration: 5 solves
LE global wall-clock time per iteration: 0.000 sec (0.1)
LE global matrix maximum size: 18
AMG cycles per iteration: 13.182 cycles
Relaxation sweeps per iteration: 536 sweeps
Relaxation exchanges per iteration: 541 exchanges
Total wall-clock time: 5.168 sec
Total CPU time: 9.906 sec
+++++++++
* Online User guide
http://www.afs.enea.it/project/neptunius/docs/fluent/html/ug/node1.htm
https://www.sharcnet.ca/Software/Ansys/17.0/en-us/help/ai_sinfo/flu_intro.html
* Footnotes

[fn:velocity-inlet-open-channel] 25.3.2.12. Open Channel Flow Compatibility with Velocity Inlet

[fn:makefile] http://mrbook.org/blog/tutorials/make/

[fn:nodes-core] https://bioinformatics.ibers.aber.ac.uk/wiki/index.php/Nodes,_Cores,_Slots#Slot

[fn:ansys-parallel-linux] https://docs.hpc.qmul.ac.uk/apps/sems/ansys/

[fn:chorin1968numerical] Chorin, Alexandre Joel. "Numerical solution of the Navier-Stokes equations." Mathematics of computation 22.104 (1968): 745-762.

